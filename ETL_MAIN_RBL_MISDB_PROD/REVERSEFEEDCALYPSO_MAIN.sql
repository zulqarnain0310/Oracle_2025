--------------------------------------------------------
--  DDL for Procedure REVERSEFEEDCALYPSO_MAIN
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" 
-- =============================================
 -- Author:		<Author,,Name>
 -- Create date: <Create Date,,>
 -- Description:	<Description,,>
 -- =============================================

AS
   -- SET NOCOUNT ON added to prevent extra result sets from
   -- interfering with SELECT statements.
   v_VEFFECTIVETO NUMBER(10,0);
-- Add the parameters for the stored procedure here

BEGIN

   SELECT TIMEKEY - 1 
     INTO v_VEFFECTIVETO
     FROM RBL_MISDB_PROD.AUTOMATE_ADVANCES 
    WHERE  EXT_FLG = 'Y';
   ----------For New Records
   MERGE INTO RBL_TEMPDB.TempReversefeedCalypso A 
   USING (SELECT A.ROWID row_id, 'N'
   FROM RBL_TEMPDB.TempReversefeedCalypso A 
    WHERE NOT EXISTS ( SELECT 1 
                       FROM RBL_MISDB_PROD.ReversefeedCalypso B
                        WHERE  B.EffectiveToTimeKey = 49999
                                 AND A.Issuerid LIKE B.Issuerid )) src
   ON ( A.ROWID = src.row_id )
   WHEN MATCHED THEN UPDATE SET A.IsChanged
                                ----Select * 
                                 = 'N';-- And A.SourceAlt_Key=B.SourceAlt_Key)
   MERGE INTO RBL_MISDB_PROD.ReversefeedCalypso O
   USING (SELECT O.ROWID row_id, v_vEffectiveto, UTILS.CONVERT_TO_VARCHAR2(SYSDATE,200,p_style=>103) AS pos_3, 'SSISUSER'
   FROM RBL_MISDB_PROD.ReversefeedCalypso O
          JOIN RBL_TEMPDB.TempReversefeedCalypso T   ON O.Issuerid LIKE T.Issuerid
          AND O.EffectiveToTimeKey = 49999
          AND T.EffectiveToTimeKey = 49999 
    WHERE ( NVL(O.branch_code, 0) <> NVL(T.branch_code, 0)
     OR NVL(O.ucic_id, 0) <> NVL(T.ucic_id, 0)
     OR NVL(O.issuerId, 0) NOT LIKE NVL(T.issuerId, 0)
     OR NVL(O.issuuerName, 0) <> NVL(T.issuuerName, 0)
     OR NVL(O.Ref_Txn_Sys_Cust_ID, 0) <> NVL(T.Ref_Txn_Sys_Cust_ID, 0)
     OR NVL(O.PAN, 0) <> NVL(T.PAN, 0)
     OR NVL(O.ISSUER_CATEGORY_CODE, 0) <> NVL(T.ISSUER_CATEGORY_CODE, 0)
     OR NVL(O.GrpEntityOfBank, 0) <> NVL(T.GrpEntityOfBank, 0)
     OR NVL(O.CP_HOLIDAY, 0) <> NVL(T.CP_HOLIDAY, 0)
     OR NVL(O.CP_EXTERNAL_REF, 0) <> NVL(T.CP_EXTERNAL_REF, 0)
     OR NVL(O.CP_FINANCIAL, 0) <> NVL(T.CP_FINANCIAL, 0)
     OR NVL(O.CP_PARENT, 0) <> NVL(T.CP_PARENT, 0)
     OR NVL(O.CP_COMMENT, 0) <> NVL(T.CP_COMMENT, 0)
     OR NVL(O.CP_STATUS, 0) <> NVL(T.CP_STATUS, 0)
     OR NVL(O.COUNTERPARTY_SHORTNAME, 0) <> NVL(T.COUNTERPARTY_SHORTNAME, 0)
     OR NVL(O.COUNTERPARTY_FULLNAME, 0) <> NVL(T.COUNTERPARTY_FULLNAME, 0)
     OR NVL(O.COUNTERPARTY_ROLE1, 0) <> NVL(T.COUNTERPARTY_ROLE1, 0)
     OR NVL(O.COUNTERPARTY_COUNTRY, 0) <> NVL(T.COUNTERPARTY_COUNTRY, 0)
     OR NVL(O.COUNTERPARTY_ROLE2, 0) <> NVL(T.COUNTERPARTY_ROLE2, 0)
     OR NVL(O.COUNTERPARTY_ROLE3, 0) <> NVL(T.COUNTERPARTY_ROLE3, 0)
     OR NVL(O.COUNTERPARTY_ROLE4, 0) <> NVL(T.COUNTERPARTY_ROLE4, 0)
     OR NVL(O.COUNTERPARTY_ROLE5, 0) <> NVL(T.COUNTERPARTY_ROLE5, 0)
     OR NVL(O.CIF_ID, 0) <> NVL(T.CIF_ID, 0)
     OR NVL(O.ENPA_ASSET_CODE, 0) <> NVL(T.ENPA_ASSET_CODE, 0)
     OR NVL(O.ENPA_DESCRIPTION, 0) <> NVL(T.ENPA_DESCRIPTION, 0)
     OR NVL(O.ENPA_ASSET_CODE_DATE, 0) <> NVL(T.ENPA_ASSET_CODE_DATE, 0)
     OR NVL(O.ENPA_D2K_NPA_DATE, 0) <> NVL(T.ENPA_D2K_NPA_DATE, 0) )) src
   ON ( O.ROWID = src.row_id )
   WHEN MATCHED THEN UPDATE SET O.EffectiveToTimeKey = v_vEffectiveto,
                                O.DateModified = pos_3,
                                O.ModifiedBy = 'SSISUSER';
   ----------For Changes Records
   MERGE INTO RBL_TEMPDB.TempReversefeedCalypso A
   USING (SELECT A.ROWID row_id, 'C'
   FROM RBL_TEMPDB.TempReversefeedCalypso A
          JOIN RBL_MISDB_PROD.ReversefeedCalypso B   ON A.IssuerID LIKE B.IssuerID 
    WHERE B.EffectiveToTimeKey = v_vEffectiveto) src
   ON ( A.ROWID = src.row_id )
   WHEN MATCHED THEN UPDATE SET A.IsChanged
                                ----Select * 
                                 = 'C';
   ---------------------------------------------------------------------------------------------------------------
   -------Expire the records
   MERGE INTO RBL_MISDB_PROD.ReversefeedCalypso AA 
   USING (SELECT AA.ROWID row_id, v_vEffectiveto, UTILS.CONVERT_TO_VARCHAR2(SYSDATE,200,p_style=>103) AS pos_3, 'SSISUSER'
   FROM RBL_MISDB_PROD.ReversefeedCalypso AA 
    WHERE AA.EffectiveToTimeKey = 49999
     AND NOT EXISTS ( SELECT 1 
                      FROM RBL_TEMPDB.TempReversefeedCalypso BB
                       WHERE  AA.Issuerid LIKE BB.Issuerid
                                AND BB.EffectiveToTimeKey = 49999 )) src
   ON ( AA.ROWID = src.row_id )
   WHEN MATCHED THEN UPDATE SET EffectiveToTimeKey = v_vEffectiveto,
                                DateModified = pos_3,
                                ModifiedBy = 'SSISUSER';
   INSERT INTO RBL_MISDB_PROD.ReversefeedCalypso
     ( CalypsoRFEntityID, Date_of_data, source_system_name, branch_code, ucic_id, issuerId, issuuerName, Ref_Txn_Sys_Cust_ID, PAN, ISSUER_CATEGORY_CODE, GrpEntityOfBank, CP_HOLIDAY, CP_EXTERNAL_REF, CP_FINANCIAL, CP_PARENT, CP_COMMENT, CP_STATUS, COUNTERPARTY_SHORTNAME, COUNTERPARTY_FULLNAME, COUNTERPARTY_ROLE1, COUNTERPARTY_COUNTRY, COUNTERPARTY_ROLE2, COUNTERPARTY_ROLE3, COUNTERPARTY_ROLE4, COUNTERPARTY_ROLE5, CIF_ID, ENPA_ASSET_CODE, ENPA_DESCRIPTION, ENPA_ASSET_CODE_DATE, ENPA_D2K_NPA_DATE, AuthorisationStatus, EffectiveFromTimeKey, EffectiveToTimeKey, CreatedBy, DateCreated, ModifiedBy, DateModified, ApprovedBy, DateApproved )
     ( SELECT CalypsoRFEntityID ,
              Date_of_data ,
              source_system_name ,
              branch_code ,
              ucic_id ,
              issuerId ,
              issuuerName ,
              Ref_Txn_Sys_Cust_ID ,
              PAN ,
              ISSUER_CATEGORY_CODE ,
              GrpEntityOfBank ,
              CP_HOLIDAY ,
              CP_EXTERNAL_REF ,
              CP_FINANCIAL ,
              CP_PARENT ,
              CP_COMMENT ,
              CP_STATUS ,
              COUNTERPARTY_SHORTNAME ,
              COUNTERPARTY_FULLNAME ,
              COUNTERPARTY_ROLE1 ,
              COUNTERPARTY_COUNTRY ,
              COUNTERPARTY_ROLE2 ,
              COUNTERPARTY_ROLE3 ,
              COUNTERPARTY_ROLE4 ,
              COUNTERPARTY_ROLE5 ,
              CIF_ID ,
              ENPA_ASSET_CODE ,
              ENPA_DESCRIPTION ,
              ENPA_ASSET_CODE_DATE ,
              ENPA_D2K_NPA_DATE ,
              AuthorisationStatus ,
              EffectiveFromTimeKey ,
              EffectiveToTimeKey ,
              CreatedBy ,
              DateCreated ,
              ModifiedBy ,
              DateModified ,
              ApprovedBy ,
              DateApproved 
       FROM RBL_TEMPDB.TempReversefeedCalypso T
        WHERE  NVL(T.IsChanged, 'U') IN ( 'N','C' )
      );

EXCEPTION WHEN NO_DATA_FOUND THEN DBMS_OUTPUT.PUT_LINE('NO DATA FOUND');
            WHEN OTHERS THEN utils.handleerror(SQLCODE,SQLERRM);
END;

/

  GRANT EXECUTE ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "ROLE_LOCAL_RBL_MISDB_PROD_ORACLE";
  GRANT EXECUTE ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "PREMOC_RBL_MISDB_PROD";
  GRANT EXECUTE ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "QPI_RBL_MISDB_PROD";
  GRANT EXECUTE ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "ALERT_RBL_MISDB_PROD";
  GRANT EXECUTE ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "DWH_RBL_MISDB_PROD";
  GRANT EXECUTE ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "MAIN_PRO";
  GRANT EXECUTE ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "D2KMNTR_RBL_MISDB_PROD";
  GRANT EXECUTE ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "CURDAT_RBL_MISDB_PROD";
  GRANT EXECUTE ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "BS_RBL_MISDB_PROD";
  GRANT EXECUTE ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "ACL_RBL_MISDB_PROD";
  GRANT EXECUTE ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "RBL_MISDB_PROD";
  GRANT EXECUTE ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "DATAUPLOAD_RBL_MISDB_PROD";
  GRANT DEBUG ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "ROLE_LOCAL_RBL_MISDB_PROD_ORACLE";
  GRANT DEBUG ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "PREMOC_RBL_MISDB_PROD";
  GRANT DEBUG ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "QPI_RBL_MISDB_PROD";
  GRANT DEBUG ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "ALERT_RBL_MISDB_PROD";
  GRANT DEBUG ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "DWH_RBL_MISDB_PROD";
  GRANT DEBUG ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "MAIN_PRO";
  GRANT DEBUG ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "D2KMNTR_RBL_MISDB_PROD";
  GRANT DEBUG ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "CURDAT_RBL_MISDB_PROD";
  GRANT DEBUG ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "BS_RBL_MISDB_PROD";
  GRANT DEBUG ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "ACL_RBL_MISDB_PROD";
  GRANT DEBUG ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "RBL_MISDB_PROD";
  GRANT DEBUG ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "DATAUPLOAD_RBL_MISDB_PROD";
  GRANT EXECUTE ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "ROLE_ALL_DB";
  GRANT EXECUTE ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "CC_CDR_RBL_STGDB";
  GRANT EXECUTE ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "RBL_BI_RBL_STGDB";
  GRANT EXECUTE ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "BSG_READ_RBL_STGDB";
  GRANT EXECUTE ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "STD_FIN_RBL_STGDB";
  GRANT EXECUTE ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "RBL_STGDB";
  GRANT EXECUTE ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "ETL_TEMP_RBL_TEMPDB";
  GRANT EXECUTE ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "RBL_TEMPDB";
  GRANT EXECUTE ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "STG_FIN_RBL_STGDB";
  GRANT EXECUTE ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "ADF_CDR_RBL_STGDB";
  GRANT DEBUG ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "ROLE_ALL_DB";
  GRANT DEBUG ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "CC_CDR_RBL_STGDB";
  GRANT DEBUG ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "RBL_BI_RBL_STGDB";
  GRANT DEBUG ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "BSG_READ_RBL_STGDB";
  GRANT DEBUG ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "STD_FIN_RBL_STGDB";
  GRANT DEBUG ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "RBL_STGDB";
  GRANT DEBUG ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "ETL_TEMP_RBL_TEMPDB";
  GRANT DEBUG ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "RBL_TEMPDB";
  GRANT DEBUG ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "STG_FIN_RBL_STGDB";
  GRANT DEBUG ON "ETL_MAIN_RBL_MISDB_PROD"."REVERSEFEEDCALYPSO_MAIN" TO "ADF_CDR_RBL_STGDB";
