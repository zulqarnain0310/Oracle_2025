--------------------------------------------------------
--  DDL for Procedure DASHBOARDSTATUS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "RBL_MISDB_PROD"."DASHBOARDSTATUS" 
AS
   v_cursor SYS_REFCURSOR;

BEGIN

   --Select * from BANDAUDITSTATUS where StartDate=CAST(getdate() as Date)
   ----Added For RBL DEmo
   OPEN  v_cursor FOR
      SELECT * 
        FROM RBL_MISDB.BANDAUDITSTATUS 
       WHERE  StartDate = UTILS.CONVERT_TO_VARCHAR2(SYSDATE,200)
                AND BandName <> 'ASSET CLASSIFICATION'
      UNION 
      SELECT * 
        FROM BANDAUDITSTATUS 
       WHERE  StartDate = UTILS.CONVERT_TO_VARCHAR2(SYSDATE,200)
                AND BandName = 'ASSET CLASSIFICATION' ;
      DBMS_SQL.RETURN_RESULT(v_cursor);
   --Select * from RBL_STGDB.dbo.Package_AUDIT where Execution_date=CAST(getdate() as Date)
   --Select  Execution_date,PackageName,TableName as TaskName,ExecutionStartTime,ExecutionEndTime,TimeDuration_Sec,ExecutionStatus from RBL_stgdb.dbo.Package_AUDIT where  Execution_date=CAST(getdate() as Date)
   OPEN  v_cursor FOR
      SELECT BandName ,
             TaskName ,
             PackageName ,
             ExecutionStatus ,
             ProcessingType 
        FROM ( SELECT Execution_date ,
                      B.BandName ,
                      PackageName ,
                      B.TaskName TaskName  ,
                      ExecutionStartTime ,
                      ExecutionEndTime ,
                      TimeDuration_Sec ,
                      ExecutionStatus ,
                      'ETL' ProcessingType  
               FROM RBL_STGDB.Package_AUDIT A
                      JOIN DimDashBoardETLAudit B   ON A.TableName = B.PackageTableName
                WHERE  A.Execution_date = UTILS.CONVERT_TO_VARCHAR2(SYSDATE,200)
               UNION ALL 

               --Select  Cast(GETDATE() as Date),Description BandName,Description PackageName,Description as TaskName,StartTime,EndTime,TimeTaken_Sec,

               --(Case when Mode='RUNNING' then 0 

               --		when Mode='COMPLETE' then 1 end)ExecutionStatus

               -- from pro.ProcessMonitor WHERE CAST(StartTime as Date)=CAST(GETDATE() As Date)
               SELECT UTILS.CONVERT_TO_VARCHAR2(SYSDATE,200) ,
                      'ASSET CLASSIFICATION' BANDNAME ,--A.RUNNINGPROCESSNAME PACKAGENAME,

                      CASE 
                           WHEN RUNNINGPROCESSNAME IN ( 'INSERTDATAFORASSETCLASSFICATIONRBL' )
                            THEN 'DATA PREPARATION'
                           WHEN RUNNINGPROCESSNAME IN ( 'REFERENCE_PERIOD_CALCULATION' )
                            THEN 'REFRENCE PERIOD CALCULATION'
                           WHEN RUNNINGPROCESSNAME IN ( 'DPD_CALCULATION','MARKING_INMONTHMARK_CUSTOMER_ACCOUNT_LEVEL','MARKING_FLGDEG_DEGREASON','MAXDPD_REFERENCEPERIOD_CALCULATION' )
                            THEN 'DPD CALCULATION'
                           WHEN RUNNINGPROCESSNAME IN ( 'NPA_DATE_CALCULATION','UPDATE_ASSETCLASS','NPA_EROSION_AGING','FINAL_ASSETCLASS_NPADATE' )
                            THEN 'NPA DATE CALCULATION'
                           WHEN RUNNINGPROCESSNAME IN ( 'UPGRADE_CUSTOMER_ACCOUNT' )
                            THEN 'UPGRADE MARKING'
                           WHEN RUNNINGPROCESSNAME IN ( 'SMA_MARKING','MARKING_FLGPNPA','MARKING_NPA_REASON_NPAACCOUNT' )
                            THEN 'SMA/PNPA MARKING'
                           WHEN RUNNINGPROCESSNAME IN ( 'UPDATEPROVISIONKEY_ACCOUNTWISE','UPDATENETBALANCE_ACCOUNTWISE' )
                            THEN 'PROVISION CALCULATION'
                           WHEN RUNNINGPROCESSNAME IN ( 'GOVTGUARAPPROPRIATION','SECURITYAPPROPRIATION','UPDATEUSEDRV','PROVISIONCOMPUTATIONSECURED','GOVTGURCOVERAMOUNT' )
                            THEN 'SECURITY APPROPRIATION'
                           WHEN RUNNINGPROCESSNAME IN ( 'UPDATIONPROVISIONCOMPUTATIONUNSECURED','UPDATIONTOTALPROVISION' )
                            THEN 'TOTAL PROVISION UPDATES'
                           WHEN RUNNINGPROCESSNAME IN ( 'INSERTDATAINTOHISTTABLE' )
                            THEN 'MOVING DATA TO DATA HISTORY'   END PACKAGENAME  ,
                      CASE 
                           WHEN RUNNINGPROCESSNAME IN ( 'INSERTDATAFORASSETCLASSFICATIONRBL' )
                            THEN 'DATA PREPARATION'
                           WHEN RUNNINGPROCESSNAME IN ( 'REFERENCE_PERIOD_CALCULATION' )
                            THEN 'REFRENCE PERIOD CALCULATION'
                           WHEN RUNNINGPROCESSNAME IN ( 'DPD_CALCULATION','MARKING_INMONTHMARK_CUSTOMER_ACCOUNT_LEVEL','MARKING_FLGDEG_DEGREASON','MAXDPD_REFERENCEPERIOD_CALCULATION' )
                            THEN 'DPD CALCULATION'
                           WHEN RUNNINGPROCESSNAME IN ( 'NPA_DATE_CALCULATION','UPDATE_ASSETCLASS','NPA_EROSION_AGING','FINAL_ASSETCLASS_NPADATE' )
                            THEN 'NPA DATE CALCULATION'
                           WHEN RUNNINGPROCESSNAME IN ( 'UPGRADE_CUSTOMER_ACCOUNT' )
                            THEN 'UPGRADE MARKING'
                           WHEN RUNNINGPROCESSNAME IN ( 'SMA_MARKING','MARKING_FLGPNPA','MARKING_NPA_REASON_NPAACCOUNT' )
                            THEN 'SMA/PNPA MARKING'
                           WHEN RUNNINGPROCESSNAME IN ( 'UPDATEPROVISIONKEY_ACCOUNTWISE','UPDATENETBALANCE_ACCOUNTWISE' )
                            THEN 'PROVISION CALCULATION'
                           WHEN RUNNINGPROCESSNAME IN ( 'GOVTGUARAPPROPRIATION','SECURITYAPPROPRIATION','UPDATEUSEDRV','PROVISIONCOMPUTATIONSECURED','GOVTGURCOVERAMOUNT' )
                            THEN 'SECURITY APPROPRIATION'
                           WHEN RUNNINGPROCESSNAME IN ( 'UPDATIONPROVISIONCOMPUTATIONUNSECURED','UPDATIONTOTALPROVISION' )
                            THEN 'TOTAL PROVISION UPDATES'
                           WHEN RUNNINGPROCESSNAME IN ( 'INSERTDATAINTOHISTTABLE' )
                            THEN 'MOVING DATA TO DATA HISTORY'   END TASKNAME  ,
                      STARTTIME ,
                      ENDTIME ,
                      TIMETAKEN_SEC ,
                      (CASE 
                            WHEN COMPLETED = 'N' THEN 0
                            WHEN COMPLETED = 'Y' THEN 1   END) EXECUTIONSTATUS  ,
                      'ACL' ProcessingType  
               FROM PRO_RBL_MISDB_PROD.AclRunningProcessStatus A
                      LEFT JOIN PRO_RBL_MISDB_PROD.ProcessMonitor B   ON A.RUNNINGPROCESSNAME = B.DESCRIPTION
                      AND UTILS.CONVERT_TO_VARCHAR2(STARTTIME,200) = UTILS.CONVERT_TO_VARCHAR2(SYSDATE,200)
                      AND B.setID = ( SELECT MAX(SetID)  
                                      FROM PRO_RBL_MISDB_PROD.ProcessMonitor 
                                       WHERE  UTILS.CONVERT_TO_VARCHAR2(STARTTIME,200) = UTILS.CONVERT_TO_VARCHAR2(SYSDATE,200) )
                WHERE  A.id <> 24 ) A
        GROUP BY BandName,TaskName,PackageName,ExecutionStatus,ProcessingType ;
      DBMS_SQL.RETURN_RESULT(v_cursor);

EXCEPTION WHEN OTHERS THEN utils.handleerror(SQLCODE,SQLERRM);
END;

/

  GRANT EXECUTE ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "ROLE_LOCAL_RBL_MISDB_PROD_ORACLE";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "PREMOC_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "QPI_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "ALERT_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "DWH_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "MAIN_PRO";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "D2KMNTR_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "CURDAT_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "BS_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "ACL_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "ETL_MAIN_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "DATAUPLOAD_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "ROLE_LOCAL_RBL_MISDB_PROD_ORACLE";
  GRANT DEBUG ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "PREMOC_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "QPI_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "ALERT_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "DWH_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "MAIN_PRO";
  GRANT DEBUG ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "D2KMNTR_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "CURDAT_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "BS_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "ACL_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "ETL_MAIN_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "DATAUPLOAD_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "ROLE_ALL_DB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "CC_CDR_RBL_STGDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "RBL_BI_RBL_STGDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "BSG_READ_RBL_STGDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "STD_FIN_RBL_STGDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "RBL_STGDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "ETL_TEMP_RBL_TEMPDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "RBL_TEMPDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "STG_FIN_RBL_STGDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "ADF_CDR_RBL_STGDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "ROLE_ALL_DB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "CC_CDR_RBL_STGDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "RBL_BI_RBL_STGDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "BSG_READ_RBL_STGDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "STD_FIN_RBL_STGDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "RBL_STGDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "ETL_TEMP_RBL_TEMPDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "RBL_TEMPDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "STG_FIN_RBL_STGDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."DASHBOARDSTATUS" TO "ADF_CDR_RBL_STGDB";
