--------------------------------------------------------
--  DDL for Function COLLATERALMGMTINUP_01102021
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" 
(
  --Declare
  v_AccountID IN VARCHAR2 DEFAULT ' ' ,
  v_UCICID IN VARCHAR2 DEFAULT ' ' ,
  v_CustomerID IN VARCHAR2 DEFAULT ' ' ,
  v_CustomerName IN VARCHAR2 DEFAULT ' ' ,
  v_TaggingAlt_Key IN NUMBER DEFAULT 0 ,
  v_DistributionAlt_Key IN NUMBER DEFAULT 0 ,
  iv_CollateralID IN VARCHAR2 DEFAULT ' ' ,
  --,@CollateralCode				varchar(50)=''
  v_CollateralTypeAlt_Key IN NUMBER DEFAULT 0 ,
  v_CollateralSubTypeAlt_Key IN NUMBER DEFAULT 0 ,
  v_CollateralOwnerTypeAlt_Key IN NUMBER DEFAULT 0 ,
  v_CollateralOwnerShipTypeAlt_Key IN NUMBER DEFAULT 0 ,
  v_ChargeTypeAlt_Key IN NUMBER DEFAULT 0 ,
  v_ChargeNatureAlt_Key IN NUMBER DEFAULT 0 ,
  v_ShareAvailabletoBankAlt_Key IN NUMBER DEFAULT 0 ,
  v_CollateralShareamount IN NUMBER,
  --,@TotalCollateralvalueatcustomerlevel	decimal(18,2)
  v_ChangeField IN VARCHAR2 DEFAULT ' ' ,
  v_CollateralValueatSanctioninRs IN NUMBER,
  v_CollateralValueasonNPAdateinRs IN NUMBER,
  --,@ExpiryBusinessRule						varchar(30)=''--,@Periodinmonth								int=0---------D2k System Common Columns		--
  v_Remark IN VARCHAR2 DEFAULT ' ' ,
  --,@MenuID					SMALLINT		= 0  change to Int
  v_MenuID IN NUMBER DEFAULT 0 ,
  v_OperationFlag IN NUMBER DEFAULT 0 ,
  v_AuthMode IN CHAR DEFAULT 'N' ,
  iv_EffectiveFromTimeKey IN NUMBER DEFAULT 0 ,
  iv_EffectiveToTimeKey IN NUMBER DEFAULT 0 ,
  iv_TimeKey IN NUMBER DEFAULT 0 ,
  v_CrModApBy IN VARCHAR2 DEFAULT ' ' ,
  v_ScreenEntityId IN NUMBER DEFAULT NULL ,
  v_OldCollateralID IN VARCHAR2 DEFAULT ' ' ,
  --,@TotCollateralsUCICCustAcc VARCHAR(5)	=''
  v_IfPercentagevalue_or_Absolutevalue IN NUMBER DEFAULT 0 ,
  v_Result OUT NUMBER/* DEFAULT 0*/
)
RETURN NUMBER
AS
   v_TimeKey NUMBER(10,0) := iv_TimeKey;
   v_EffectiveFromTimeKey NUMBER(10,0) := iv_EffectiveFromTimeKey;
   v_EffectiveToTimeKey NUMBER(10,0) := iv_EffectiveToTimeKey;
   v_CollateralID VARCHAR2(30) := iv_CollateralID;
   v_AuthorisationStatus VARCHAR2(5) := NULL;
   v_CreatedBy VARCHAR2(20) := NULL;
   v_DateCreated DATE := NULL;
   v_ModifiedBy VARCHAR2(20) := NULL;
   v_DateModified DATE := NULL;
   v_ApprovedBy VARCHAR2(20) := NULL;
   v_DateApproved DATE := NULL;
   v_ApprovedByFirstLevel VARCHAR2(20) := NULL;
   v_DateApprovedFirstLevel DATE := NULL;
   v_ErrorHandle NUMBER(10,0) := 0;
   v_ExEntityKey NUMBER(10,0) := 0;
   v_AccountEntityId NUMBER(10,0) := 0;
   v_CustomerEntityId NUMBER(10,0) := 0;
   ------------Added for Rejection Screen  29/06/2020   ----------
   v_Uniq_EntryID NUMBER(10,0) := 0;
   v_RejectedBY VARCHAR2(50) := NULL;
   v_RemarkBy VARCHAR2(50) := NULL;
   v_RejectRemark VARCHAR2(200) := NULL;
   v_ScreenName VARCHAR2(200) := NULL;
   v_CollIDAutoGenerated NUMBER(10,0);
   v_SecurityEntityID NUMBER(5,0);
   v_AppAvail CHAR;
   v_cursor SYS_REFCURSOR;

BEGIN

   DBMS_OUTPUT.PUT_LINE(1);
   /*TODO:SQLDEV*/ SET DATEFORMAT DMY /*END:SQLDEV*/
   v_ScreenName := 'Collateral' ;
   -------------------------------------------------------------
   SELECT Timekey 

     INTO v_Timekey
     FROM SysDataMatrix 
    WHERE  CurrentStatus = 'C';
   v_EffectiveFromTimeKey := v_TimeKey ;
   v_EffectiveToTimeKey := 49999 ;
   --SET @BankRPAlt_Key = (Select ISNULL(Max(BankRPAlt_Key),0)+1 from DimBankRP)
   DBMS_OUTPUT.PUT_LINE('A');
   SELECT ParameterValue 

     INTO v_AppAvail
     FROM SysSolutionParameter 
    WHERE  Parameter_Key = 6;
   IF ( v_AppAvail = 'N' ) THEN

   BEGIN
      v_Result := -11 ;
      RETURN v_Result;

   END;
   END IF;
   IF v_AccountID <> ' ' THEN
    SELECT AccountEntityId 

     INTO v_AccountEntityId
     FROM AdvAcBasicDetail 
    WHERE  CustomerACId = v_AccountID;
   END IF;
   IF v_CustomerID <> ' ' THEN
    SELECT CustomerEntityId 

     INTO v_CustomerEntityId
     FROM CustomerBasicDetail 
    WHERE  CustomerId = v_CustomerID;
   END IF;
   IF v_OperationFlag = 1 THEN
    DECLARE
      v_temp NUMBER(1, 0) := 0;

    --- add
   BEGIN
      DBMS_OUTPUT.PUT_LINE(1);
      -----CHECK DUPLICATE
      BEGIN
         SELECT 1 INTO v_temp
           FROM DUAL
          WHERE EXISTS ( SELECT 1 
                         FROM CurDat_RBL_MISDB_PROD.AdvSecurityDetail 
                          WHERE  CollateralID = v_CollateralID
                                   AND NVL(AuthorisationStatus, 'A') = 'A'
                                   AND EffectiveFromTimeKey <= v_TimeKey
                                   AND EffectiveToTimeKey >= v_TimeKey
                         UNION 
                         SELECT 1 
                         FROM RBL_MISDB_PROD.AdvSecurityDetail_Mod 
                          WHERE  ( EffectiveFromTimeKey <= v_TimeKey
                                   AND EffectiveToTimeKey >= v_TimeKey )
                                   AND CollateralID = v_CollateralID
                                   AND NVL(AuthorisationStatus, 'A') IN ( 'NP','MP','DP','RM' )
       );
      EXCEPTION
         WHEN OTHERS THEN
            NULL;
      END;

      IF v_temp = 1 THEN

      BEGIN
         DBMS_OUTPUT.PUT_LINE(2);
         v_Result := -4 ;
         RETURN v_Result;-- USER ALEADY EXISTS

      END;
      END IF;

   END;
   END IF;
   BEGIN

      BEGIN
         --SQL Server BEGIN TRANSACTION;
         utils.incrementTrancount;
         ----ELSE
         ----	BEGIN
         ----	   PRINT 3
         ----		SELECT @GLAlt_Key=NEXT VALUE FOR Seq_GLAlt_Key
         ----		PRINT @GLAlt_Key
         ----	END
         ---------------------Added on 29/05/2020 for user allocation rights
         /*
         		IF @AccessScopeAlt_Key in (1,2)
         		BEGIN
         		PRINT 'Sunil'

         		IF EXISTS(				                
         					SELECT  1 FROM DimUserinfo WHERE UserLoginID=@GLAlt_Key AND ISNULL(AuthorisationStatus,'A')='A' and EffectiveFromTimeKey <=@TimeKey AND EffectiveToTimeKey >=@TimeKey
         					And IsChecker='N'
         				)	
         				BEGIN
         				   PRINT 2
         					SET @Result=-6
         					RETURN @Result -- USER SHOULD HAVE CHECKER RIGHTS 
         				END
         		END


         		IF @AccessScopeAlt_Key in (3)
         		BEGIN
         		PRINT 'Sunil1'

         		IF EXISTS(				                
         					SELECT  1 FROM DimUserinfo WHERE UserLoginID=@GLAlt_Key AND ISNULL(AuthorisationStatus,'A')='A' and EffectiveFromTimeKey <=@TimeKey AND EffectiveToTimeKey >=@TimeKey
         					And IsChecker='Y'
         				)	
         				BEGIN
         				   PRINT 2
         					SET @Result=-8
         					RETURN @Result -- USER SHOULD NOT HAVE CHECKER RIGHTS 
         				END
         		END
         		*/
         ----------------------------------------
         -----
         DBMS_OUTPUT.PUT_LINE(3);
         --np- new,  mp - modified, dp - delete, fm - further modifief, A- AUTHORISED , 'RM' - REMARK 
         IF v_OperationFlag = 1
           AND v_AuthMode = 'Y' THEN

          -- ADD
         BEGIN
            DBMS_OUTPUT.PUT_LINE('Add');
            v_CollIDAutoGenerated := 0 ;
            v_SecurityEntityID := 0 ;
            SELECT MAX(UTILS.CONVERT_TO_NUMBER(NVL(CollateralID, 0),10,0))  

              INTO v_CollIDAutoGenerated
              FROM RBL_MISDB_PROD.AdvSecurityDetail_Mod ;
            IF ( v_CollIDAutoGenerated IS NULL ) THEN
             v_CollIDAutoGenerated := 1000001 ;
            ELSE
               v_CollIDAutoGenerated := UTILS.CONVERT_TO_NUMBER(v_CollIDAutoGenerated,10,0) + 1 ;
            END IF;
            --Print '@CollIDAutoGenerated'
            --Print @CollIDAutoGenerated
            v_CollateralID := UTILS.CONVERT_TO_VARCHAR2(v_CollIDAutoGenerated,30) ;
            v_CreatedBy := v_CrModApBy ;
            v_DateCreated := SYSDATE ;
            v_AuthorisationStatus := 'NP' ;
            SELECT MAX(NVL(SecurityEntityID, 0))  

              INTO v_SecurityEntityID
              FROM RBL_MISDB_PROD.AdvSecurityDetail_Mod ;
            IF ( v_SecurityEntityID IS NULL ) THEN
             v_SecurityEntityID := 1 ;
            ELSE
               v_SecurityEntityID := v_SecurityEntityID + 1 ;
            END IF;
            --SET @GLAlt_Key = (Select ISNULL(Max(GLAlt_Key),0)+1 from 
            --						(Select GLAlt_Key from DimGL
            --						 UNION 
            --						 Select GLAlt_Key from DimGL_Mod
            --						)A)
            DBMS_OUTPUT.PUT_LINE('@SecurityEntityID');
            DBMS_OUTPUT.PUT_LINE(v_SecurityEntityID);
            GOTO Collateral_Insert;
            <<Collateral_Insert_Add>>

         END;
         ELSE
            IF ( v_OperationFlag = 2
              OR v_OperationFlag = 3 )
              AND v_AuthMode = 'Y' THEN

             --EDIT AND DELETE
            BEGIN
               DBMS_OUTPUT.PUT_LINE(4);
               v_CreatedBy := v_CrModApBy ;
               v_DateCreated := SYSDATE ;
               v_Modifiedby := v_CrModApBy ;
               v_DateModified := SYSDATE ;
               DBMS_OUTPUT.PUT_LINE(5);
               IF v_OperationFlag = 2 THEN

               BEGIN
                  DBMS_OUTPUT.PUT_LINE('Edit');
                  v_AuthorisationStatus := 'MP' ;
                  SELECT SecurityEntityID 

                    INTO v_SecurityEntityID
                    FROM RBL_MISDB_PROD.AdvSecurityDetail_Mod 
                   WHERE  ( EffectiveFromTimeKey <= v_TimeKey
                            AND EffectiveToTimeKey >= v_TimeKey )
                            AND CollateralID = v_CollateralID
                            AND AuthorisationStatus IN ( 'NP','MP','A','RM' )
                  ;

               END;
               ELSE

               BEGIN
                  DBMS_OUTPUT.PUT_LINE('DELETE');
                  v_AuthorisationStatus := 'DP' ;

               END;
               END IF;
               ---FIND CREATED BY FROM MAIN TABLE
               SELECT CreatedBy ,
                      DateCreated 

                 INTO v_CreatedBy,
                      v_DateCreated
                 FROM CurDat_RBL_MISDB_PROD.AdvSecurityDetail 
                WHERE  ( EffectiveFromTimeKey <= v_TimeKey
                         AND EffectiveToTimeKey >= v_TimeKey )
                         AND CollateralID = v_CollateralID;
               ---FIND CREATED BY FROM MAIN TABLE IN CASE OF DATA IS NOT AVAILABLE IN MAIN TABLE
               IF NVL(v_CreatedBy, ' ') = ' ' THEN

               BEGIN
                  DBMS_OUTPUT.PUT_LINE('NOT AVAILABLE IN MAIN');
                  SELECT CreatedBy ,
                         DateCreated 

                    INTO v_CreatedBy,
                         v_DateCreated
                    FROM RBL_MISDB_PROD.AdvSecurityDetail_Mod 
                   WHERE  ( EffectiveFromTimeKey <= v_TimeKey
                            AND EffectiveToTimeKey >= v_TimeKey )
                            AND CollateralID = v_CollateralID
                            AND AuthorisationStatus IN ( 'NP','MP','A','RM' )
                  ;

               END;
               ELSE

                ---IF DATA IS AVAILABLE IN MAIN TABLE
               BEGIN
                  DBMS_OUTPUT.PUT_LINE('AVAILABLE IN MAIN');
                  ----UPDATE FLAG IN MAIN TABLES AS MP
                  UPDATE CurDat_RBL_MISDB_PROD.AdvSecurityDetail
                     SET AuthorisationStatus = v_AuthorisationStatus
                   WHERE  ( EffectiveFromTimeKey <= v_TimeKey
                    AND EffectiveToTimeKey >= v_TimeKey )
                    AND CollateralID = v_CollateralID;

               END;
               END IF;
               --UPDATE NP,MP  STATUS 
               IF v_OperationFlag = 2 THEN

               BEGIN
                  UPDATE RBL_MISDB_PROD.AdvSecurityDetail_Mod
                     SET AuthorisationStatus = 'FM',
                         ModifiedBy = v_Modifiedby,
                         DateModified = v_DateModified
                   WHERE  ( EffectiveFromTimeKey <= v_TimeKey
                    AND EffectiveToTimeKey >= v_TimeKey )
                    AND CollateralID = v_CollateralID
                    AND AuthorisationStatus IN ( 'NP','MP','RM' )
                  ;

               END;
               END IF;
               GOTO Collateral_Insert;
               <<Collateral_Insert_Edit_Delete>>

            END;
            ELSE
               IF v_OperationFlag = 3
                 AND v_AuthMode = 'N' THEN

               BEGIN
                  -- DELETE WITHOUT MAKER CHECKER
                  v_Modifiedby := v_CrModApBy ;
                  v_DateModified := SYSDATE ;
                  UPDATE CurDat_RBL_MISDB_PROD.AdvSecurityDetail
                     SET ModifiedBy = v_Modifiedby,
                         DateModified = v_DateModified,
                         EffectiveToTimeKey = v_EffectiveFromTimeKey - 1
                   WHERE  ( EffectiveFromTimeKey = EffectiveFromTimeKey
                    AND EffectiveToTimeKey >= v_TimeKey )
                    AND CollateralID = v_CollateralID;

               END;

               ----------------------------------------------------------------------------------
               ELSE
                  IF v_OperationFlag = 21
                    AND v_AuthMode = 'Y' THEN
                   DECLARE
                     v_temp NUMBER(1, 0) := 0;

                  BEGIN
                     v_ApprovedBy := v_CrModApBy ;
                     v_DateApproved := SYSDATE ;
                     UPDATE RBL_MISDB_PROD.AdvSecurityDetail_Mod
                        SET AuthorisationStatus = 'R',
                            ApprovedBy = v_ApprovedBy,
                            DateApproved = v_DateApproved,
                            EffectiveToTimeKey = v_EffectiveFromTimeKey - 1
                      WHERE  ( EffectiveFromTimeKey <= v_TimeKey
                       AND EffectiveToTimeKey >= v_TimeKey )
                       AND CollateralID = v_CollateralID
                       AND AuthorisationStatus IN ( 'NP','MP','DP','RM','1A' )
                     ;
                     BEGIN
                        SELECT 1 INTO v_temp
                          FROM DUAL
                         WHERE EXISTS ( SELECT 1 
                                        FROM CurDat_RBL_MISDB_PROD.AdvSecurityDetail 
                                         WHERE  ( EffectiveFromTimeKey <= v_TimeKey
                                                  AND EffectiveToTimeKey >= v_Timekey )
                                                  AND CollateralID = v_CollateralID );
                     EXCEPTION
                        WHEN OTHERS THEN
                           NULL;
                     END;

                     IF v_temp = 1 THEN

                     BEGIN
                        UPDATE CurDat_RBL_MISDB_PROD.AdvSecurityDetail
                           SET AuthorisationStatus = 'A'
                         WHERE  ( EffectiveFromTimeKey <= v_TimeKey
                          AND EffectiveToTimeKey >= v_TimeKey )
                          AND CollateralID = v_CollateralID
                          AND AuthorisationStatus IN ( 'MP','DP','RM' )
                        ;

                     END;
                     END IF;

                  END;

                  ---------------------------------------------------------------------------------------------	
                  ELSE
                     IF v_OperationFlag = 17
                       AND v_AuthMode = 'Y' THEN
                      DECLARE
                        v_temp NUMBER(1, 0) := 0;

                     BEGIN
                        v_ApprovedBy := v_CrModApBy ;
                        v_DateApproved := SYSDATE ;
                        UPDATE RBL_MISDB_PROD.AdvSecurityDetail_Mod
                           SET AuthorisationStatus = 'R',
                               ApprovedBy = v_ApprovedBy,
                               DateApproved = v_DateApproved,
                               EffectiveToTimeKey = v_EffectiveFromTimeKey - 1
                         WHERE  ( EffectiveFromTimeKey <= v_TimeKey
                          AND EffectiveToTimeKey >= v_TimeKey )
                          AND CollateralID = v_CollateralID
                          AND AuthorisationStatus IN ( 'NP','MP','DP','RM' )
                        ;
                        ---------------Added for Rejection Pop Up Screen  29/06/2020   ----------
                        DBMS_OUTPUT.PUT_LINE('Sunil');
                        --		DECLARE @EntityKey as Int 
                        --SELECT	@CreatedBy=CreatedBy,@DateCreated=DATECreated,@EntityKey=EntityKey
                        --					 FROM DimGL_Mod 
                        --						WHERE (EffectiveToTimeKey =@EffectiveFromTimeKey-1 )
                        --							AND GLAlt_Key=@GLAlt_Key And ISNULL(AuthorisationStatus,'A')='R'
                        --	EXEC [AxisIntReversalDB].[RejectedEntryDtlsInsert]  @Uniq_EntryID = @EntityKey, @OperationFlag = @OperationFlag ,@AuthMode = @AuthMode ,@RejectedBY = @CrModApBy
                        --,@RemarkBy = @CreatedBy,@DateCreated=@DateCreated ,@RejectRemark = @Remark ,@ScreenName = @ScreenName
                        --------------------------------
                        BEGIN
                           SELECT 1 INTO v_temp
                             FROM DUAL
                            WHERE EXISTS ( SELECT 1 
                                           FROM CurDat_RBL_MISDB_PROD.AdvSecurityDetail 
                                            WHERE  ( EffectiveFromTimeKey <= v_TimeKey
                                                     AND EffectiveToTimeKey >= v_Timekey )
                                                     AND CollateralID = v_CollateralID );
                        EXCEPTION
                           WHEN OTHERS THEN
                              NULL;
                        END;

                        IF v_temp = 1 THEN

                        BEGIN
                           UPDATE CurDat_RBL_MISDB_PROD.AdvSecurityDetail
                              SET AuthorisationStatus = 'A'
                            WHERE  ( EffectiveFromTimeKey <= v_TimeKey
                             AND EffectiveToTimeKey >= v_TimeKey )
                             AND CollateralID = v_CollateralID
                             AND AuthorisationStatus IN ( 'MP','DP','RM' )
                           ;

                        END;
                        END IF;

                     END;
                     ELSE
                        IF v_OperationFlag = 18 THEN

                        BEGIN
                           DBMS_OUTPUT.PUT_LINE(18);
                           v_ApprovedBy := v_CrModApBy ;
                           v_DateApproved := SYSDATE ;
                           UPDATE RBL_MISDB_PROD.AdvSecurityDetail_Mod
                              SET AuthorisationStatus = 'RM'
                            WHERE  ( EffectiveFromTimeKey <= v_TimeKey
                             AND EffectiveToTimeKey >= v_TimeKey )
                             AND AuthorisationStatus IN ( 'NP','MP','DP','RM' )

                             AND CollateralID = v_CollateralID;

                        END;
                        ELSE
                           IF v_OperationFlag = 16 THEN

                           BEGIN
                              v_ApprovedBy := v_CrModApBy ;
                              v_DateApproved := SYSDATE ;
                              v_ApprovedByFirstLevel := v_CrModApBy ;
                              v_DateApprovedFirstLevel := SYSDATE ;
                              UPDATE RBL_MISDB_PROD.AdvSecurityDetail_Mod
                                 SET AuthorisationStatus = '1A',
                                     ApprovedByFirstLevel = v_ApprovedBy,
                                     DateApprovedFirstLevel = v_DateApproved
                               WHERE  CollateralID = v_CollateralID
                                AND AuthorisationStatus IN ( 'NP','MP','DP','RM' )
                              ;

                           END;
                           ELSE
                              IF v_OperationFlag = 20
                                OR v_AuthMode = 'N' THEN

                              BEGIN
                                 DBMS_OUTPUT.PUT_LINE('Authorise');
                                 -------set parameter for  maker checker disabled
                                 IF v_AuthMode = 'N' THEN

                                 BEGIN
                                    IF v_OperationFlag = 1 THEN

                                    BEGIN
                                       v_CreatedBy := v_CrModApBy ;
                                       v_DateCreated := SYSDATE ;

                                    END;
                                    ELSE

                                    BEGIN
                                       v_ModifiedBy := v_CrModApBy ;
                                       v_DateModified := SYSDATE ;
                                       SELECT CreatedBy ,
                                              DATECreated 

                                         INTO v_CreatedBy,
                                              v_DateCreated
                                         FROM CurDat_RBL_MISDB_PROD.AdvSecurityDetail 
                                        WHERE  ( EffectiveFromTimeKey <= v_TimeKey
                                                 AND EffectiveToTimeKey >= v_TimeKey )
                                                 AND CollateralID = v_CollateralID;
                                       v_ApprovedBy := v_CrModApBy ;
                                       v_DateApproved := SYSDATE ;

                                    END;
                                    END IF;

                                 END;
                                 END IF;
                                 ---set parameters and UPDATE mod table in case maker checker enabled
                                 IF v_AuthMode = 'Y' THEN
                                  DECLARE
                                    v_DelStatus CHAR(2);
                                    v_CurrRecordFromTimeKey NUMBER(5,0) := 0;
                                    v_CurEntityKey NUMBER(10,0) := 0;

                                 BEGIN
                                    DBMS_OUTPUT.PUT_LINE('B');
                                    DBMS_OUTPUT.PUT_LINE('C');
                                    SELECT MAX(EntityKey)  

                                      INTO v_ExEntityKey
                                      FROM RBL_MISDB_PROD.AdvSecurityDetail_Mod 
                                     WHERE  ( EffectiveFromTimeKey <= v_Timekey
                                              AND EffectiveToTimeKey >= v_Timekey )
                                              AND CollateralID = v_CollateralID
                                              AND AuthorisationStatus IN ( 'NP','MP','DP','RM','1A' )
                                    ;
                                    SELECT AuthorisationStatus ,
                                           CreatedBy ,
                                           DATECreated ,
                                           ModifiedBy ,
                                           DateModified ,
                                           SecurityEntityID ,
                                           ApprovedByFirstLevel ,
                                           DateApprovedFirstLevel 

                                      INTO v_DelStatus,
                                           v_CreatedBy,
                                           v_DateCreated,
                                           v_ModifiedBy,
                                           v_DateModified,
                                           v_SecurityEntityID,
                                           v_ApprovedByFirstLevel,
                                           v_DateApprovedFirstLevel
                                      FROM RBL_MISDB_PROD.AdvSecurityDetail_Mod 
                                     WHERE  EntityKey = v_ExEntityKey;
                                    v_ApprovedBy := v_CrModApBy ;
                                    v_DateApproved := SYSDATE ;
                                    SELECT MIN(EntityKey)  

                                      INTO v_ExEntityKey
                                      FROM RBL_MISDB_PROD.AdvSecurityDetail_Mod 
                                     WHERE  ( EffectiveFromTimeKey <= v_Timekey
                                              AND EffectiveToTimeKey >= v_Timekey )
                                              AND CollateralID = v_CollateralID
                                              AND AuthorisationStatus IN ( 'NP','MP','DP','RM','1A' )
                                    ;
                                    SELECT EffectiveFromTimeKey 

                                      INTO v_CurrRecordFromTimeKey
                                      FROM RBL_MISDB_PROD.AdvSecurityDetail_Mod 
                                     WHERE  EntityKey = v_ExEntityKey;
                                    UPDATE RBL_MISDB_PROD.AdvSecurityDetail_Mod
                                       SET EffectiveToTimeKey = v_CurrRecordFromTimeKey - 1
                                     WHERE  ( EffectiveFromTimeKey <= v_Timekey
                                      AND EffectiveToTimeKey >= v_Timekey )
                                      AND CollateralID = v_CollateralID
                                      AND AuthorisationStatus = 'A';
                                    -------DELETE RECORD AUTHORISE
                                    IF v_DelStatus = 'DP' THEN
                                     DECLARE
                                       v_temp NUMBER(1, 0) := 0;

                                    BEGIN
                                       UPDATE RBL_MISDB_PROD.AdvSecurityDetail_Mod
                                          SET AuthorisationStatus = 'A',
                                              ApprovedBy = v_ApprovedBy,
                                              DateApproved = v_DateApproved,
                                              EffectiveToTimeKey = v_EffectiveFromTimeKey - 1
                                        WHERE  CollateralID = v_CollateralID
                                         AND AuthorisationStatus IN ( 'NP','MP','DP','RM','1A' )
                                       ;
                                       BEGIN
                                          SELECT 1 INTO v_temp
                                            FROM DUAL
                                           WHERE EXISTS ( SELECT 1 
                                                          FROM CurDat_RBL_MISDB_PROD.AdvSecurityDetail 
                                                           WHERE  ( EffectiveFromTimeKey <= v_TimeKey
                                                                    AND EffectiveToTimeKey >= v_TimeKey )
                                                                    AND CollateralID = v_CollateralID );
                                       EXCEPTION
                                          WHEN OTHERS THEN
                                             NULL;
                                       END;

                                       IF v_temp = 1 THEN

                                       BEGIN
                                          UPDATE CurDat_RBL_MISDB_PROD.AdvSecurityDetail
                                             SET AuthorisationStatus = 'A',
                                                 ModifiedBy = v_ModifiedBy,
                                                 DateModified = v_DateModified,
                                                 ApprovedBy = v_ApprovedBy,
                                                 DateApproved = v_DateApproved,
                                                 EffectiveToTimeKey = v_EffectiveFromTimeKey - 1
                                           WHERE  ( EffectiveFromTimeKey <= v_Timekey
                                            AND EffectiveToTimeKey >= v_Timekey )
                                            AND CollateralID = v_CollateralID;

                                       END;
                                       END IF;

                                    END;
                                     -- END OF DELETE BLOCK
                                    ELSE

                                     -- OTHER THAN DELETE STATUS
                                    BEGIN
                                       DBMS_OUTPUT.PUT_LINE('@DelStatus');
                                       DBMS_OUTPUT.PUT_LINE(v_DelStatus);
                                       DBMS_OUTPUT.PUT_LINE('@AuthMode');
                                       DBMS_OUTPUT.PUT_LINE(v_AuthMode);
                                       UPDATE RBL_MISDB_PROD.AdvSecurityDetail_Mod
                                          SET AuthorisationStatus = 'A',
                                              ApprovedBy = v_ApprovedBy,
                                              DateApproved = v_DateApproved
                                        WHERE  CollateralID = v_CollateralID
                                         AND AuthorisationStatus IN ( 'NP','MP','RM','1A' )
                                       ;

                                    END;
                                    END IF;

                                 END;
                                 END IF;
                                 IF v_DelStatus <> 'DP'
                                   OR v_AuthMode = 'N' THEN
                                  DECLARE
                                    v_IsAvailable CHAR(1) := 'N';
                                    v_IsSCD2 CHAR(1) := 'N';
                                    v_temp NUMBER(1, 0) := 0;
                                    -----------------Added on 13-03-2021
                                    ------------------------------------------------------
                                    --declare 
                                    ----@CollateralID								int=0		
                                    ----@CollateralValueatSanctioninRs				decimal(18,2)
                                    ----,@CollateralValueasonNPAdateinRs			decimal(18,2)
                                    --@CollateralValueatthetimeoflastreviewinRs	decimal(18,2)
                                    --,@ValuationSourceNameAlt_Key				int=0
                                    --,@SourceName								varchar(30)
                                    --,@ValuationDate								Date
                                    --,@LatestCollateralValueinRs					decimal(18,2)
                                    --,@ExpiryBusinessRule						varchar(30)=''
                                    --,@Periodinmonth								int=0
                                    --,@ValueExpirationDate						Date
                                    --EXEC CollateralValueInsert  @CollateralID=@CollateralID
                                    --							,@CollateralValueatSanctioninRs=@CollateralValueatSanctioninRs
                                    --							,@CollateralValueasonNPAdateinRs=@CollateralValueasonNPAdateinRs
                                    --							,@CollateralValueatthetimeoflastreviewinRs=@CollateralValueatthetimeoflastreviewinRs
                                    --							--,@ValuationSourceNameAlt_Key=@ValuationSourceNameAlt_Key
                                    --							--,@SourceName=@SourceName
                                    --							,@ValuationDate=@ValuationDate
                                    --							,@LatestCollateralValueinRs=@LatestCollateralValueinRs
                                    --							,@ExpiryBusinessRule=@ExpiryBusinessRule
                                    --							,@Periodinmonth=@Periodinmonth
                                    --							,@ValueExpirationDate=@ValueExpirationDate
                                    --							,@AuthorisationStatus=@AuthorisationStatus
                                    --							,@EffectiveFromTimeKey=@EffectiveFromTimeKey
                                    --							,@EffectiveToTimeKey=@EffectiveToTimeKey
                                    --							,@CreatedBy	=@CreatedBy	
                                    --							 ,@DateCreated	=@DateCreated
                                    --							 ,@ModifiedBy=@ModifiedBy	
                                    --							 ,@DateModified	=@DateModified
                                    --							 ,@ApprovedBy=@ApprovedBy	
                                    --							 ,@DateApproved	=@DateApproved
                                    --@CollateralID	int	=0
                                    v_CustomeroftheBankAlt_Key NUMBER(10,0) := 0;
                                    --,@CollateralID	varchar(16)=''
                                    --,@CustomerID	varchar(50)=''
                                    v_OtherOwnerName VARCHAR2(50) := ' ';
                                    v_PAN VARCHAR2(10) := ' ';
                                    v_OtherOwnerRelationshipAlt_Key NUMBER(10,0) := 0;
                                    v_IfRelationselectAlt_Key NUMBER(10,0) := 0;
                                    v_AddressType VARCHAR2(200) := ' ';
                                    v_Category VARCHAR2(200) := ' ';
                                    v_AddressLine1 VARCHAR2(200) := ' ';
                                    v_AddressLine2 VARCHAR2(200) := ' ';
                                    v_AddressLine3 VARCHAR2(200) := ' ';
                                    v_City VARCHAR2(200) := ' ';
                                    v_PinCode VARCHAR2(6) := ' ';
                                    v_Country VARCHAR2(100) := ' ';
                                    v_State VARCHAR2(100) := ' ';
                                    v_District VARCHAR2(100) := ' ';
                                    v_STDCodeO VARCHAR2(100) := ' ';
                                    v_PhoneNumberO VARCHAR2(10) := ' ';
                                    v_STDCodeR VARCHAR2(100) := ' ';
                                    v_PhoneNumberR VARCHAR2(10) := ' ';
                                    v_FaxNumber VARCHAR2(20) := ' ';
                                    v_MobileNO VARCHAR2(15) := ' ';

                                 BEGIN
                                    DBMS_OUTPUT.PUT_LINE('Check');
                                    v_AuthorisationStatus := 'A' ;--changedby siddhant 5/7/2020
                                    BEGIN
                                       SELECT 1 INTO v_temp
                                         FROM DUAL
                                        WHERE EXISTS ( SELECT 1 
                                                       FROM CurDat_RBL_MISDB_PROD.AdvSecurityDetail 
                                                        WHERE  ( EffectiveFromTimeKey <= v_TimeKey
                                                                 AND EffectiveToTimeKey >= v_TimeKey )
                                                                 AND CollateralID = v_CollateralID );
                                    EXCEPTION
                                       WHEN OTHERS THEN
                                          NULL;
                                    END;

                                    IF v_temp = 1 THEN
                                     DECLARE
                                       v_temp NUMBER(1, 0) := 0;

                                    BEGIN
                                       v_IsAvailable := 'Y' ;
                                       --SET @AuthorisationStatus='A'
                                       BEGIN
                                          SELECT 1 INTO v_temp
                                            FROM DUAL
                                           WHERE EXISTS ( SELECT 1 
                                                          FROM CurDat_RBL_MISDB_PROD.AdvSecurityDetail 
                                                           WHERE  ( EffectiveFromTimeKey <= v_TimeKey
                                                                    AND EffectiveToTimeKey >= v_TimeKey )
                                                                    AND EffectiveFromTimeKey = v_TimeKey
                                                                    AND CollateralID = v_CollateralID );
                                       EXCEPTION
                                          WHEN OTHERS THEN
                                             NULL;
                                       END;

                                       IF v_temp = 1 THEN

                                       BEGIN
                                          DBMS_OUTPUT.PUT_LINE('BBBB');
                                          UPDATE CurDat_RBL_MISDB_PROD.AdvSecurityDetail
                                             SET RefSystemAcId = v_AccountID,
                                                 UCICID = v_UCICID,
                                                 RefCustomerId = v_CustomerID,
                                                 CustomerName = v_CustomerName,
                                                 TaggingAlt_Key = v_TaggingAlt_Key,
                                                 DistributionAlt_Key = v_DistributionAlt_Key,
                                                 CollateralID = v_CollateralID
                                                 --,CollateralCode					= @CollateralCode				
                                                 ,
                                                 SecurityAlt_Key = v_CollateralTypeAlt_Key,
                                                 CollateralSubTypeAlt_Key = v_CollateralSubTypeAlt_Key,
                                                 OwnerTypeAlt_Key = v_CollateralOwnerTypeAlt_Key,
                                                 CollateralOwnerShipTypeAlt_Key = v_CollateralOwnerShipTypeAlt_Key,
                                                 SecurityChargeTypeAlt_Key = v_ChargeTypeAlt_Key,
                                                 ChargeNatureAlt_Key = v_ChargeNatureAlt_Key,
                                                 ShareAvailabletoBankAlt_Key = v_ShareAvailabletoBankAlt_Key,
                                                 CollateralShareamount = v_CollateralShareamount
                                                 --,TotalCollateralvalueatcustomerlevel	= @TotalCollateralvalueatcustomerlevel	
                                                 ,
                                                 Security_RefNo = v_OldCollateralID
                                                 --,TotCollateralsUCICCustAcc=@TotCollateralsUCICCustAcc
                                                 ,
                                                 IfPercentagevalue_or_Absolutevalue = v_IfPercentagevalue_or_Absolutevalue,
                                                 ChangeField = v_ChangeField,
                                                 CollateralValueatSanctioninRs = v_CollateralValueatSanctioninRs,
                                                 CollateralValueasonNPAdateinRs = v_CollateralValueasonNPAdateinRs,

                                                 --,ExpiryBusinessRule=@ExpiryBusinessRule

                                                 --,Periodinmonth=@Periodinmonth
                                                 v_AccountEntityId = AccountEntityId,
                                                 v_CustomerEntityId = CustomerEntityId,
                                                 ApprovedByFirstLevel = v_ApprovedByFirstLevel,
                                                 DateApprovedFirstLevel = v_DateApprovedFirstLevel,
                                                 ModifiedBy = v_ModifiedBy,
                                                 DateModified = v_DateModified,
                                                 ApprovedBy = CASE 
                                                                   WHEN v_AuthMode = 'Y' THEN v_ApprovedBy
                                                 ELSE NULL
                                                    END,
                                                 DateApproved = CASE 
                                                                     WHEN v_AuthMode = 'Y' THEN v_DateApproved
                                                 ELSE NULL
                                                    END,
                                                 AuthorisationStatus = CASE 
                                                                            WHEN v_AuthMode = 'Y' THEN 'A'
                                                 ELSE NULL
                                                    END
                                           WHERE  ( EffectiveFromTimeKey <= v_TimeKey
                                            AND EffectiveToTimeKey >= v_TimeKey )
                                            AND EffectiveFromTimeKey = v_EffectiveFromTimeKey
                                            AND CollateralID = v_CollateralID;

                                       END;
                                       ELSE

                                       BEGIN
                                          v_IsSCD2 := 'Y' ;

                                       END;
                                       END IF;

                                    END;
                                    END IF;
                                    IF v_IsAvailable = 'N'
                                      OR v_IsSCD2 = 'Y' THEN

                                    BEGIN
                                       DBMS_OUTPUT.PUT_LINE('Insert into Main Table');
                                       DBMS_OUTPUT.PUT_LINE('@ExEntityKey');
                                       DBMS_OUTPUT.PUT_LINE(v_ExEntityKey);
                                       DBMS_OUTPUT.PUT_LINE('@SecurityEntityID');
                                       DBMS_OUTPUT.PUT_LINE(v_SecurityEntityID);
                                       INSERT INTO CurDat_RBL_MISDB_PROD.AdvSecurityDetail
                                         ( EntityKey, RefSystemAcId, UCICID, RefCustomerId, CustomerName, TaggingAlt_Key, DistributionAlt_Key, CollateralID
                                       --,CollateralCode				
                                       , SecurityAlt_Key, SecurityEntityID, CollateralSubTypeAlt_Key, OwnerTypeAlt_Key, CollateralOwnerShipTypeAlt_Key, SecurityChargeTypeAlt_Key, ChargeNatureAlt_Key, ShareAvailabletoBankAlt_Key, CollateralShareamount
                                       --,TotalCollateralvalueatcustomerlevel	
                                       , Security_RefNo
                                       --,TotCollateralsUCICCustAcc
                                       , IfPercentagevalue_or_Absolutevalue, AuthorisationStatus, EffectiveFromTimeKey, EffectiveToTimeKey, CreatedBy, DateCreated, ModifiedBy, DateModified, ApprovedBy, DateApproved, ChangeField, ApprovedByFirstLevel, DateApprovedFirstLevel, CollateralValueatSanctioninRs, CollateralValueasonNPAdateinRs
                                       --,ExpiryBusinessRule
                                        --,Periodinmonth
                                       , AccountEntityId, CustomerEntityId )
                                         ( SELECT v_ExEntityKey ,
                                                  v_AccountID ,
                                                  v_UCICID ,
                                                  v_CustomerID ,
                                                  v_CustomerName ,
                                                  v_TaggingAlt_Key ,
                                                  v_DistributionAlt_Key ,
                                                  v_CollateralID ,
                                                  --,@CollateralCode				
                                                  v_CollateralTypeAlt_Key ,
                                                  v_SecurityEntityID ,
                                                  v_CollateralSubTypeAlt_Key ,
                                                  v_CollateralOwnerTypeAlt_Key ,
                                                  v_CollateralOwnerShipTypeAlt_Key ,
                                                  v_ChargeTypeAlt_Key ,
                                                  v_ChargeNatureAlt_Key ,
                                                  v_ShareAvailabletoBankAlt_Key ,
                                                  v_CollateralShareamount ,
                                                  --,@TotalCollateralvalueatcustomerlevel	
                                                  v_OldCollateralID ,
                                                  --,@TotCollateralsUCICCustAcc
                                                  v_IfPercentagevalue_or_Absolutevalue ,
                                                  CASE 
                                                       WHEN v_AUTHMODE = 'Y' THEN TRIM(v_AuthorisationStatus)
                                                  ELSE NULL
                                                     END col  ,
                                                  v_EffectiveFromTimeKey ,
                                                  v_EffectiveToTimeKey ,
                                                  v_CreatedBy ,
                                                  v_DateCreated ,
                                                  CASE 
                                                       WHEN v_AuthMode = 'Y'
                                                         OR v_IsAvailable = 'Y' THEN v_ModifiedBy
                                                  ELSE NULL
                                                     END col  ,
                                                  CASE 
                                                       WHEN v_AuthMode = 'Y'
                                                         OR v_IsAvailable = 'Y' THEN v_DateModified
                                                  ELSE NULL
                                                     END col  ,
                                                  CASE 
                                                       WHEN v_AUTHMODE = 'Y' THEN v_ApprovedBy
                                                  ELSE NULL
                                                     END col  ,
                                                  CASE 
                                                       WHEN v_AUTHMODE = 'Y' THEN v_DateApproved
                                                  ELSE NULL
                                                     END col  ,
                                                  v_ChangeField ,
                                                  v_ApprovedByFirstLevel ,
                                                  v_DateApprovedFirstLevel ,
                                                  v_CollateralValueatSanctioninRs ,
                                                  v_CollateralValueasonNPAdateinRs ,
                                                  --,@ExpiryBusinessRule			        
                                                  --,@Periodinmonth	
                                                  v_AccountEntityId ,
                                                  v_CustomerEntityId 
                                             FROM DUAL  );

                                    END;
                                    END IF;
                                    IF ( v_CollateralOwnerShipTypeAlt_Key = 1 ) THEN

                                    BEGIN
                                       UPDATE CollateralOtherOwner
                                          SET EffectiveToTimeKey = EffectiveFromTimeKey - 1
                                        WHERE  CollateralID = v_CollateralID
                                         AND EffectiveFromTimeKey = v_EffectiveFromTimeKey
                                         AND EffectiveToTimeKey = v_EffectiveToTimeKey;

                                    END;
                                    END IF;
                                    CollateralOwnerInsert(v_CollateralID => v_CollateralID,
                                                          v_CustomeroftheBankAlt_Key => v_CustomeroftheBankAlt_Key,
                                                          v_CustomerID => 
                                                          --,@AccountID=@AccountID
                                                          v_CustomerID,
                                                          v_OtherOwnerName => v_OtherOwnerName,
                                                          v_PAN => v_PAN,
                                                          v_OtherOwnerRelationshipAlt_Key => v_OtherOwnerRelationshipAlt_Key,
                                                          v_IfRelationselectAlt_Key => v_IfRelationselectAlt_Key,
                                                          v_AuthorisationStatus => 
                                                          --,@AddressType=@AddressType

                                                          --,@Category=@Category

                                                          --,@AddressLine1=@AddressLine1

                                                          --,@AddressLine2=@AddressLine2

                                                          --,@AddressLine3=@AddressLine3

                                                          --,@City=@City

                                                          --,@PinCode=@PinCode

                                                          --,@Country=@Country

                                                          --,@State=@State

                                                          --,@District=@District

                                                          --,@STDCodeO=@STDCodeO

                                                          --,@PhoneNumberO=@PhoneNumberO

                                                          --,@STDCodeR=@STDCodeR

                                                          --,@PhoneNumberR=@PhoneNumberR

                                                          --,@FaxNumber=@FaxNumber

                                                          --,@MobileNO=@MobileNO
                                                          v_AuthorisationStatus,
                                                          iv_EffectiveFromTimeKey => v_EffectiveFromTimeKey,
                                                          iv_EffectiveToTimeKey => v_EffectiveToTimeKey,
                                                          v_CreatedBy => v_CreatedBy,
                                                          v_DateCreated => v_DateCreated,
                                                          v_ModifiedBy => v_ModifiedBy,
                                                          v_DateModified => v_DateModified,
                                                          v_ApprovedBy => v_ApprovedBy,
                                                          v_DateApproved => v_DateApproved) ;
                                    CollateralOwnerAddressInsert(v_CollateralID => v_CollateralID,
                                                                 v_AddressType => v_AddressType,
                                                                 v_Category => v_Category,
                                                                 v_AddressLine1 => v_AddressLine1,
                                                                 v_AddressLine2 => v_AddressLine2,
                                                                 v_AddressLine3 => v_AddressLine3,
                                                                 v_City => v_City,
                                                                 v_PinCode => v_PinCode,
                                                                 v_Country => v_Country,
                                                                 v_State => v_State,
                                                                 v_District => v_District,
                                                                 v_STDCodeO => v_STDCodeO,
                                                                 v_PhoneNumberO => v_PhoneNumberO,
                                                                 v_STDCodeR => v_STDCodeR,
                                                                 v_PhoneNumberR => v_PhoneNumberR,
                                                                 v_FaxNumber => v_FaxNumber,
                                                                 v_MobileNO => v_MobileNO,
                                                                 v_AuthorisationStatus => v_AuthorisationStatus,
                                                                 iv_EffectiveFromTimeKey => v_EffectiveFromTimeKey,
                                                                 iv_EffectiveToTimeKey => v_EffectiveToTimeKey,
                                                                 v_CreatedBy => v_CreatedBy,
                                                                 v_DateCreated => v_DateCreated,
                                                                 v_ModifiedBy => v_ModifiedBy,
                                                                 v_DateModified => v_DateModified,
                                                                 v_ApprovedBy => v_ApprovedBy,
                                                                 v_DateApproved => v_DateApproved) ;
                                    ----------------------------------------------------------------------------------------------------
                                    IF v_IsSCD2 = 'Y' THEN

                                    BEGIN
                                       UPDATE CurDat_RBL_MISDB_PROD.AdvSecurityDetail
                                          SET EffectiveToTimeKey = v_EffectiveFromTimeKey - 1,
                                              AuthorisationStatus = CASE 
                                                                         WHEN v_AUTHMODE = 'Y' THEN 'A'
                                              ELSE NULL
                                                 END
                                        WHERE  ( EffectiveFromTimeKey = EffectiveFromTimeKey
                                         AND EffectiveToTimeKey >= v_TimeKey )
                                         AND CollateralID = v_CollateralID
                                         AND EffectiveFromTimekey < v_EffectiveFromTimeKey;

                                    END;
                                    END IF;

                                 END;
                                 END IF;
                                 IF v_AUTHMODE = 'N' THEN

                                 BEGIN
                                    v_AuthorisationStatus := 'A' ;
                                    GOTO Collateral_Insert;
                                    <<HistoryRecordInUp>>

                                 END;
                                 END IF;

                              END;
                              END IF;
                           END IF;
                        END IF;
                     END IF;
                  END IF;
               END IF;
            END IF;
         END IF;
         DBMS_OUTPUT.PUT_LINE(6);
         v_ErrorHandle := 1 ;
         <<Collateral_Insert>>
         IF v_ErrorHandle = 0 THEN

         BEGIN
            DBMS_OUTPUT.PUT_LINE('@SecurityEntityIDSac');
            DBMS_OUTPUT.PUT_LINE(v_SecurityEntityID);
            INSERT INTO RBL_MISDB_PROD.AdvSecurityDetail_Mod
              ( RefSystemAcId, UCICID, RefCustomerId, CustomerName, TaggingAlt_Key, DistributionAlt_Key, CollateralID
            --,CollateralCode				
            , SecurityAlt_Key, SecurityEntityID, CollateralSubTypeAlt_Key, OwnerTypeAlt_Key, CollateralOwnerShipTypeAlt_Key, SecurityChargeTypeAlt_Key, ChargeNatureAlt_Key, ShareAvailabletoBankAlt_Key, CollateralShareamount
            --,TotalCollateralvalueatcustomerlevel	
            , Security_RefNo
            --,TotCollateralsUCICCustAcc
            , IfPercentagevalue_or_Absolutevalue, AuthorisationStatus, EffectiveFromTimeKey, EffectiveToTimeKey, CreatedBy, DateCreated, ModifiedBy, DateModified, ApprovedBy, DateApproved, ChangeField, CollateralValueatSanctioninRs, CollateralValueasonNPAdateinRs
            --,ExpiryBusinessRule
             --,Periodinmonth	
            , AccountEntityId, CustomerEntityId )
              VALUES ( v_AccountID, v_UCICID, v_CustomerID, v_CustomerName, v_TaggingAlt_Key, v_DistributionAlt_Key, v_CollateralID, 
            --,@CollateralCode				
            v_CollateralTypeAlt_Key, v_SecurityEntityID, v_CollateralSubTypeAlt_Key, v_CollateralOwnerTypeAlt_Key, v_CollateralOwnerShipTypeAlt_Key, v_ChargeTypeAlt_Key, v_ChargeNatureAlt_Key, v_ShareAvailabletoBankAlt_Key, v_CollateralShareamount, 
            --,@TotalCollateralvalueatcustomerlevel	
            v_OldCollateralID, 
            --,@TotCollateralsUCICCustAcc
            v_IfPercentagevalue_or_Absolutevalue, v_AuthorisationStatus, v_EffectiveFromTimeKey, v_EffectiveToTimeKey, v_CreatedBy, v_DateCreated, CASE 
                                                                                                                                                        WHEN v_AuthMode = 'Y'
                                                                                                                                                          OR v_IsAvailable = 'Y' THEN v_ModifiedBy
            ELSE NULL
               END, CASE 
                         WHEN v_AuthMode = 'Y'
                           OR v_IsAvailable = 'Y' THEN v_DateModified
            ELSE NULL
               END, CASE 
                         WHEN v_AuthMode = 'Y' THEN v_ApprovedBy
            ELSE NULL
               END, CASE 
                         WHEN v_AuthMode = 'Y' THEN v_DateApproved
            ELSE NULL
               END, v_ChangeField, v_CollateralValueatSanctioninRs, v_CollateralValueasonNPAdateinRs, 
            --,@ExpiryBusinessRule			        

            --,@Periodinmonth	
            v_AccountEntityId, v_CustomerEntityId );
            IF v_OperationFlag = 1
              AND v_AUTHMODE = 'Y' THEN

            BEGIN
               DBMS_OUTPUT.PUT_LINE(3);
               GOTO Collateral_Insert_Add;

            END;
            ELSE
               IF ( v_OperationFlag = 2
                 OR v_OperationFlag = 3 )
                 AND v_AUTHMODE = 'Y' THEN

               BEGIN
                  GOTO Collateral_Insert_Edit_Delete;

               END;
               END IF;
            END IF;

         END;
         END IF;
         -------------------
         DBMS_OUTPUT.PUT_LINE(7);
         utils.commit_transaction;
         --SELECT @D2Ktimestamp=CAST(D2Ktimestamp AS INT) FROM DimGL WHERE (EffectiveFromTimeKey=EffectiveFromTimeKey AND EffectiveToTimeKey>=@TimeKey) 
         --															AND GLAlt_Key=@GLAlt_Key
         IF v_OperationFlag = 3 THEN

         BEGIN
            v_Result := 0 ;

         END;
         ELSE

         BEGIN
            v_Result := 1 ;

         END;
         END IF;

      END;
   EXCEPTION
      WHEN OTHERS THEN

   BEGIN
      ROLLBACK;
      utils.resetTrancount;
      INSERT INTO RBL_MISDB_PROD.Error_Log
        ( SELECT utils.error_line ErrorLine  ,
                 SQLERRM ErrorMessage  ,
                 SQLCODE ErrorNumber  ,
                 utils.error_procedure ErrorProcedure  ,
                 utils.error_severity ErrorSeverity  ,
                 utils.error_state ErrorState  ,
                 SYSDATE 
            FROM DUAL  );
      OPEN  v_cursor FOR
         SELECT SQLERRM 
           FROM DUAL  ;
         DBMS_SQL.RETURN_RESULT(v_cursor);
      RETURN -1;---------

   END;END;

EXCEPTION WHEN OTHERS THEN utils.handleerror(SQLCODE,SQLERRM);
END;

/

  GRANT EXECUTE ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "ROLE_LOCAL_RBL_MISDB_PROD_ORACLE";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "PREMOC_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "QPI_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "ALERT_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "DWH_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "MAIN_PRO";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "D2KMNTR_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "CURDAT_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "BS_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "ACL_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "ETL_MAIN_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "DATAUPLOAD_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "ROLE_LOCAL_RBL_MISDB_PROD_ORACLE";
  GRANT DEBUG ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "PREMOC_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "QPI_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "ALERT_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "DWH_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "MAIN_PRO";
  GRANT DEBUG ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "D2KMNTR_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "CURDAT_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "BS_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "ACL_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "ETL_MAIN_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "DATAUPLOAD_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "ROLE_ALL_DB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "CC_CDR_RBL_STGDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "RBL_BI_RBL_STGDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "BSG_READ_RBL_STGDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "STD_FIN_RBL_STGDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "RBL_STGDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "ETL_TEMP_RBL_TEMPDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "RBL_TEMPDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "STG_FIN_RBL_STGDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "ADF_CDR_RBL_STGDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "ROLE_ALL_DB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "CC_CDR_RBL_STGDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "RBL_BI_RBL_STGDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "BSG_READ_RBL_STGDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "STD_FIN_RBL_STGDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "RBL_STGDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "ETL_TEMP_RBL_TEMPDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "RBL_TEMPDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "STG_FIN_RBL_STGDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."COLLATERALMGMTINUP_01102021" TO "ADF_CDR_RBL_STGDB";
