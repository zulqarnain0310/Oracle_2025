--------------------------------------------------------
--  DDL for Function RESTRUCTUREASSETS_UPLOADDATAINUP_15122023
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" 
(
  iv_Timekey IN NUMBER,
  v_UserLoginID IN VARCHAR2,
  v_OperationFlag IN NUMBER,
  v_MenuId IN NUMBER,
  v_AuthMode IN CHAR,
  v_filepath IN VARCHAR2,
  iv_EffectiveFromTimeKey IN NUMBER,
  iv_EffectiveToTimeKey IN NUMBER,
  v_Result OUT NUMBER/* DEFAULT 0*/,
  v_UniqueUploadID IN NUMBER
)
RETURN NUMBER
AS
   v_Timekey NUMBER(10,0) := iv_Timekey;
   v_EffectiveFromTimeKey NUMBER(10,0) := iv_EffectiveFromTimeKey;
   v_EffectiveToTimeKey NUMBER(10,0) := iv_EffectiveToTimeKey;
   v_FilePathUpload VARCHAR2(100);
   v_cursor SYS_REFCURSOR;
--@Authlevel varchar(5)
--DECLARE @Timekey INT=24928,
--	@UserLoginID VARCHAR(100)='FNAOPERATOR',
--	@OperationFlag INT=1,
--	@MenuId INT=24714,
--	@AuthMode	CHAR(1)='N',
--	@filepath VARCHAR(MAX)='',
--	@EffectiveFromTimeKey INT=24928,
--	@EffectiveToTimeKey	INT=49999,
--    @Result		INT=0 ,
--	@UniqueUploadID INT=41

BEGIN

   /*TODO:SQLDEV*/ SET DATEFORMAT DMY /*END:SQLDEV*/
   --Declare @CollIDAutoGenerated   Int
   --   Declare @CollateralID		   varchar(30)=''
   --DECLARE @Timekey INT
   --SET @Timekey=(SELECT MAX(TIMEKEY) FROM dbo.SysProcessingCycle
   --	WHERE ProcessType='Quarterly')
   SELECT UTILS.CONVERT_TO_NUMBER(B.timekey,10,0) 

     INTO v_Timekey
     FROM SysDataMatrix A
            JOIN SysDayMatrix B   ON A.TimeKey = B.TimeKey
    WHERE  A.CurrentStatus = 'C';
   DBMS_OUTPUT.PUT_LINE(v_TIMEKEY);
   v_EffectiveFromTimeKey := v_TimeKey ;
   v_EffectiveToTimeKey := 49999 ;
   v_FilePathUpload := v_UserLoginId || '_' || v_filepath ;
   DBMS_OUTPUT.PUT_LINE('@FilePathUpload');
   DBMS_OUTPUT.PUT_LINE(v_FilePathUpload);
   BEGIN

      BEGIN
         --BEGIN TRAN
         IF ( v_MenuId = 24714 ) THEN

         BEGIN
            --Set @FilePathUpload='mismaker_CollateralUpload_3.xlsx'
            --select * from SysCRisMacMenu where menucaption like '%Restru%'
            IF ( v_OperationFlag = 1 ) THEN
             DECLARE
               v_temp NUMBER(1, 0) := 0;

            BEGIN
               BEGIN
                  SELECT 1 INTO v_temp
                    FROM DUAL
                   WHERE NOT ( EXISTS ( SELECT 1 
                                        FROM RetsructuredAssetsUpload_stg 
                                         WHERE  filname = v_FilePathUpload ) );
               EXCEPTION
                  WHEN OTHERS THEN
                     NULL;
               END;

               IF v_temp = 1 THEN

               BEGIN
                  --Rollback tran
                  v_Result := -8 ;
                  RETURN v_Result;

               END;
               END IF;
               DBMS_OUTPUT.PUT_LINE('Sachin');
               BEGIN
                  SELECT 1 INTO v_temp
                    FROM DUAL
                   WHERE EXISTS ( SELECT 1 
                                  FROM RetsructuredAssetsUpload_stg 
                                   WHERE  filname = v_FilePathUpload );
               EXCEPTION
                  WHEN OTHERS THEN
                     NULL;
               END;

               IF v_temp = 1 THEN
                DECLARE
                  --sp
                  v_ExcelUploadId NUMBER(10,0);

               BEGIN
                  INSERT INTO ExcelUploadHistory
                    ( UploadedBy, DateofUpload, AuthorisationStatus
                  --,Action	
                  , UploadType, EffectiveFromTimeKey, EffectiveToTimeKey, CreatedBy, DateCreated )
                    ( SELECT v_UserLoginID ,
                             SYSDATE ,
                             'NP' ,
                             --,'NP'
                             'Restructure Assets Upload' ,
                             v_EffectiveFromTimeKey ,
                             v_EffectiveToTimeKey ,
                             v_UserLoginID ,
                             SYSDATE 
                        FROM DUAL  );
                  DBMS_OUTPUT.PUT_LINE(SQL%ROWCOUNT);
                  SELECT MAX(UniqueUploadID)  

                    INTO v_ExcelUploadId
                    FROM ExcelUploadHistory ;
                  INSERT INTO UploadStatus
                    ( FileNames, UploadedBy, UploadDateTime, UploadType )
                    VALUES ( v_filepath, v_UserLoginID, TO_DATE(SYSDATE,'dd/mm/yyyy'), 'Restructure Assets Upload' );
                  /*TODO:SQLDEV*/ SET dateformat DMY /*END:SQLDEV*/
                  /*
                  		SET @CollIDAutoGenerated=0


                  					Select @CollIDAutoGenerated= MAX(Convert(Int,ISNULL(CollateralID,0))) From(
                  					Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from Curdat.AdvSecurityDetail
                  					UNION ALL
                  					Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from DBO.AdvSecurityDetail_Mod
                  					UNION ALL
                  					Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from Curdat.AdvSecurityValueDetail
                  					UNION ALL
                  					 Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from DBO.AdvSecurityValueDetail_Mod
                  					 UNION ALL
                  					 Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from DBO.CollateralDetailUpload_Mod
                  					 )X

                  					IF (@CollIDAutoGenerated IS NULL)

                  						SET   @CollIDAutoGenerated=1000001

                  					ELSE 
                  					    SET    @CollIDAutoGenerated=Convert(Int,@CollIDAutoGenerated)+1

                  						--Print '@CollIDAutoGenerated'
                  						--Print @CollIDAutoGenerated

                  					 SET @CollateralID=Convert(Varchar(30),@CollIDAutoGenerated)

                  					 PRINT '@ExcelUploadId'
                  					 PRINT @ExcelUploadId


                  					 */
                  --alter table RestructureAsset_Upload_Mod
                  --add SrNo INT
                  INSERT INTO RestructureAsset_Upload_Mod
                    ( SrNo, AccountID
                  --,AccountEntityID
                  , UploadID, RestructureFacility, RevisedBusinessSeg, DisbursementDate, ReferenceDate, InvocationDate, DateofConversionintoEquity, PrinRpymntStartDate, InttRpymntStartDate, AssetClassatRstrctr, IfNPANPADate, NPAQuarter, TypeofRestructuring, CovidMoratoriamMSME, CovidOTRCategory, BankingRelationship, DateofRestructuring, RestructuringApprovingAuth, DateofIstDefaultonCRILIC, ReportingBank, DateofSigningICA, OSasondateofRstrctr, POSasondateofRstrctr, InvestmentGrade, CreditProvisionRs, DFVProvisionRs, MTMProvisionRs, SheetName, AuthorisationStatus, EffectiveFromTimeKey, EffectiveToTimeKey, CreatedBy, DateCreated )
                    ( 
                      --,ModifiedBy

                      --,DateModified

                      --,ApprovedBy

                      --,DateApproved

                      --D2Ktimestamp
                      SELECT SrNo ,
                             AccountID ,
                             --,@AccountEntityID
                             v_ExcelUploadId ,
                             RestructureFacility ,
                             RevisedBusinessSeg ,
                             CASE 
                                  WHEN NVL(DisbursementDate, ' ') <> ' ' THEN UTILS.CONVERT_TO_VARCHAR2(DisbursementDate,200,p_style=>105)
                             ELSE NULL
                                END DisbursementDate  ,
                             CASE 
                                  WHEN NVL(ReferenceDate, ' ') <> ' ' THEN UTILS.CONVERT_TO_VARCHAR2(ReferenceDate,200,p_style=>105)
                             ELSE NULL
                                END ReferenceDate  ,
                             CASE 
                                  WHEN NVL(InvocationDate, ' ') <> ' ' THEN UTILS.CONVERT_TO_VARCHAR2(InvocationDate,200,p_style=>105)
                             ELSE NULL
                                END InvocationDate  ,
                             CASE 
                                  WHEN NVL(DateofConversionintoEquity, ' ') <> ' ' THEN UTILS.CONVERT_TO_VARCHAR2(DateofConversionintoEquity,200,p_style=>105)
                             ELSE NULL
                                END DateofConversionintoEquity  ,
                             CASE 
                                  WHEN NVL(PrinRpymntStartDate, ' ') <> ' ' THEN UTILS.CONVERT_TO_VARCHAR2(PrinRpymntStartDate,200,p_style=>105)
                             ELSE NULL
                                END PrinRpymntStartDate  ,
                             CASE 
                                  WHEN NVL(InttRpymntStartDate, ' ') <> ' ' THEN UTILS.CONVERT_TO_VARCHAR2(InttRpymntStartDate,200,p_style=>105)
                             ELSE NULL
                                END InttRpymntStartDate  ,
                             AssetClassatRstrctr ,
                             CASE 
                                  WHEN NVL(NPADate, ' ') <> ' ' THEN UTILS.CONVERT_TO_VARCHAR2(NPADate,200,p_style=>105)
                             ELSE NULL
                                END NPADate  ,
                             NPAQuarter ,
                             TypeofRestructuring ,
                             CovidMoratoriamMSME ,
                             CovidOTRCategory ,
                             BankingRelationship ,
                             CASE 
                                  WHEN NVL(DateofRestructuring, ' ') <> ' ' THEN UTILS.CONVERT_TO_VARCHAR2(DateofRestructuring,200,p_style=>105)
                             ELSE NULL
                                END DateofRestructuring  ,
                             RestructuringApprovingAuth ,
                             CASE 
                                  WHEN NVL(DateofIstDefaultonCRILIC, ' ') <> ' ' THEN UTILS.CONVERT_TO_VARCHAR2(DateofIstDefaultonCRILIC,200,p_style=>105)
                             ELSE NULL
                                END DateofIstDefaultonCRILIC  ,
                             ReportingBank ,
                             CASE 
                                  WHEN NVL(DateofSigningICA, ' ') <> ' ' THEN UTILS.CONVERT_TO_VARCHAR2(DateofSigningICA,200,p_style=>105)
                             ELSE NULL
                                END DateofSigningICA  ,
                             CASE 
                                  WHEN NVL(OSasondateofRstrctr, ' ') <> ' ' THEN UTILS.CONVERT_TO_NUMBER(OSasondateofRstrctr,16,2)
                             ELSE OSasondateofRstrctr
                                END OSasondateofRstrctr  ,
                             CASE 
                                  WHEN NVL(POSasondateofRstrctr, ' ') <> ' ' THEN UTILS.CONVERT_TO_NUMBER(POSasondateofRstrctr,16,2)
                             ELSE POSasondateofRstrctr
                                END POSasondateofRstrctr  ,
                             InvestmentGrade ,
                             CASE 
                                  WHEN CreditProvisionRs = ' ' THEN NULL
                             ELSE UTILS.CONVERT_TO_NUMBER(NVL(CreditProvisionRs, 0),16,2)
                                END CreditProvisionRs  ,
                             CASE 
                                  WHEN DFVProvisionRs = ' ' THEN NULL
                             ELSE UTILS.CONVERT_TO_NUMBER(NVL(DFVProvisionRs, ' '),16,2)
                                END DFVProvisionRs  ,
                             CASE 
                                  WHEN MTMProvisionRs = ' ' THEN NULL
                             ELSE UTILS.CONVERT_TO_NUMBER(NVL(MTMProvisionRs, ' '),16,2)
                                END MTMProvisionRs  ,
                             filname ,
                             'NP' ,
                             v_Timekey ,
                             49999 ,
                             v_UserLoginID ,
                             SYSDATE 

                      --select *	
                      FROM RetsructuredAssetsUpload_stg 
                       WHERE  filname = v_FilePathUpload );

               END;
               END IF;

            END;
            END IF;
            ---DELETE FROM STAGING DATA Sachin
            --DELETE FROM RetsructuredAssetsUpload_stg
            --WHERE filname=@FilePathUpload
            --RETURN @ExcelUploadId
            ----DECLARE @UniqueUploadID INT
            --SET 	@UniqueUploadID=(SELECT MAX(UniqueUploadID) FROM  ExcelUploadHistory)
            IF ( v_OperationFlag = 16 ) THEN

             ----1ST LEVEL AUTHORIZE
            BEGIN
               UPDATE RestructureAsset_Upload_Mod
                  SET AuthorisationStatus = '1A',
                      ApprovedBy = v_UserLoginID,
                      DateApproved = SYSDATE
                WHERE  UploadId = v_UniqueUploadID;
               --UPDATE 
               --[RestructureAsset_Upload_Mod] 
               --SET 
               --AuthorisationStatus	='1A'
               --,ApprovedBy	=@UserLoginID
               --,DateApproved	=GETDATE()
               --WHERE UploadId=@UniqueUploadID
               UPDATE ExcelUploadHistory
                  SET AuthorisationStatus = '1A',
                      ApprovedBy = v_UserLoginID,
                      DateApproved = SYSDATE
                WHERE  UniqueUploadID = v_UniqueUploadID
                 AND UploadType = 'Restructure Assets Upload';

            END;
            END IF;
            IF ( v_OperationFlag = 20 ) THEN

             ----2ND LEVEL AUTHORIZE
            BEGIN
               UPDATE RestructureAsset_Upload_Mod
                  SET AuthorisationStatus = 'A',
                      ApprovedBy = v_UserLoginID,
                      DateApproved = SYSDATE
                WHERE  UploadId = v_UniqueUploadID;
               --UPDATE [RestructureAsset_Upload_Mod] SET 
               --AuthorisationStatus	='A'
               --,ApprovedBy	=@UserLoginID
               --,DateApproved	=GETDATE()
               --WHERE UploadId=@UniqueUploadID
               DBMS_OUTPUT.PUT_LINE('MAIN Expires');
               ---------- ADDED BY SATWAJI AS ON 06/03/2023 FOR EXPIRED THE RECORDS PRESENT IN MAIN TABLE BEFORE INSERTING INTO MAIN TABLE AFTER 2ND LEVEL AUTHENTICATION ---------
               MERGE INTO A 
               USING (SELECT A.ROWID row_id, v_TimeKey - 1 AS EffectiveToTimeKey
               FROM A ,CurDat_RBL_MISDB_PROD.AdvAcRestructureDetail A
                      JOIN RestructureAsset_Upload_Mod B   ON A.RefSystemAcId = B.AccountID
                      AND ( A.EffectiveFromTimeKey <= v_Timekey
                      AND A.EffectiveToTimeKey >= v_Timekey ) 
                WHERE B.UploadID = v_UniqueUploadID) src
               ON ( A.ROWID = src.row_id )
               WHEN MATCHED THEN UPDATE SET A.EffectiveToTimeKey = src.EffectiveToTimeKey;
               INSERT INTO CurDat_RBL_MISDB_PROD.AdvAcRestructureDetail
                 ( RefSystemAcId, AccountEntityId, RefCustomerId
               --,RestructureCatgAlt_Key  ---RestructureFacility
               , RestructureFacilityTypeAlt_Key, RevisedBusinessSegment ---RevisedBusinessSeg
               , DisbursementDate, RefDate, InvocationDate, ConversionDate
               --,RepaymentStartDate
               , PrincRepayStartDate
               --,IntRepayStartDate
               , InttRepayStartDate
               --,RestructureAssetClassAlt_key
               , PreRestructureAssetClassAlt_Key
               --,PreRestrucNPA_Date
               , PreRestructureNPA_Date, Npa_Qtr, RestructureTypeAlt_Key, Is_COVID_Morat
               --,COVID_OTR_Catg
               , COVID_OTR_CatgAlt_Key, BankingRelationTypeAlt_Key
               --BankingType
                --,RestructureDate
               , RestructureDt, ApprovingAuthAlt_Key, CRILIC_Fst_DefaultDate, FstDefaultReportingBank --,ReportingBank  
               , ICA_SignDate, RestructureAmt, RestructurePOS
               --,Is_InvestmentGrade
               , InvestmentGrade, CreditProvision, DFVProvision, MTMProvision, AuthorisationStatus, EffectiveFromTimeKey, EffectiveToTimeKey, CreatedBy, DateCreated, ModifiedBy, DateModified, ApprovedBy, DateApproved )
                 ( SELECT DISTINCT AccountID ,
                                   B.AccountEntityID ,
                                   B.RefCustomerId ,
                                   --,@ExcelUploadId
                                   I.ParameterAlt_Key RestructureFacility  ,
                                   RevisedBusinessSeg ,
                                   CASE 
                                        WHEN DisbursementDate <> ' ' THEN UTILS.CONVERT_TO_VARCHAR2(DisbursementDate,200)
                                   ELSE NULL
                                      END DisbursementDate  ,
                                   CASE 
                                        WHEN ReferenceDate <> ' ' THEN UTILS.CONVERT_TO_VARCHAR2(ReferenceDate,200)
                                   ELSE NULL
                                      END ReferenceDate  ,
                                   CASE 
                                        WHEN InvocationDate <> ' ' THEN UTILS.CONVERT_TO_VARCHAR2(InvocationDate,200)
                                   ELSE NULL
                                      END InvocationDate  ,
                                   CASE 
                                        WHEN DateofConversionintoEquity <> ' ' THEN UTILS.CONVERT_TO_VARCHAR2(DateofConversionintoEquity,200)
                                   ELSE NULL
                                      END DateofConversionintoEquity  ,
                                   CASE 
                                        WHEN PrinRpymntStartDate <> ' ' THEN UTILS.CONVERT_TO_VARCHAR2(PrinRpymntStartDate,200)
                                   ELSE NULL
                                      END PrinRpymntStartDate  ,
                                   CASE 
                                        WHEN InttRpymntStartDate <> ' ' THEN UTILS.CONVERT_TO_VARCHAR2(InttRpymntStartDate,200)
                                   ELSE NULL
                                      END InttRpymntStartDate  ,
                                   DA.AssetClassAlt_Key AssetClassatRstrctr  ,
                                   --,A.AssetClassatRstrctr AssetClassatRstrctr
                                   CASE 
                                        WHEN IfNPANPADate <> ' ' THEN UTILS.CONVERT_TO_VARCHAR2(IfNPANPADate,200)
                                   ELSE NULL
                                      END IfNPANPADate  ,
                                   NPAQuarter ,
                                   J.ParameterAlt_Key TypeofRestructuring  ,
                                   K.ParameterAlt_Key CovidMoratoriamMSME  ,
                                   L.ParameterAlt_Key CovidOTRCategory  ,
                                   M.ParameterAlt_Key BankingRelationship  ,
                                   CASE 
                                        WHEN DateofRestructuring <> ' ' THEN UTILS.CONVERT_TO_VARCHAR2(DateofRestructuring,200)
                                   ELSE NULL
                                      END DateofRestructuring  ,
                                   RestructuringApprovingAuth ,
                                   CASE 
                                        WHEN DateofIstDefaultonCRILIC <> ' ' THEN UTILS.CONVERT_TO_VARCHAR2(DateofIstDefaultonCRILIC,200)
                                   ELSE NULL
                                      END DateofIstDefaultonCRILIC  ,
                                   ReportingBank ,
                                   CASE 
                                        WHEN DateofSigningICA <> ' ' THEN UTILS.CONVERT_TO_VARCHAR2(DateofSigningICA,200)
                                   ELSE NULL
                                      END DateofSigningICA  ,
                                   OSasondateofRstrctr ,
                                   POSasondateofRstrctr ,
                                   InvestmentGrade ,
                                   CreditProvisionRs ,
                                   DFVProvisionRs ,
                                   MTMProvisionRs ,
                                   --,SheetName
                                   --,'NP'
                                   --,@Timekey
                                   --,49999
                                   --,@UserLoginID
                                   --,GETDATE()
                                   A.AuthorisationStatus ,
                                   v_Timekey ,
                                   49999 ,
                                   A.CreatedBy ,
                                   A.DateCreated ,
                                   A.ModifiedBy ,
                                   A.DateModified ,
                                   v_UserLoginID ,
                                   SYSDATE 
                   FROM RestructureAsset_Upload_Mod A
                          JOIN CurDat_RBL_MISDB_PROD.AdvAcBasicDetail B   ON B.CustomerACID = A.AccountID
                          AND ( B.EffectiveFromTimeKey <= v_Timekey
                          AND B.EffectiveToTimeKey >= v_Timekey )
                          LEFT JOIN DimAssetClass DA   ON DA.AssetClassName = A.AssetClassatRstrctr
                          LEFT JOIN ( 
                                      --select * from DimAssetClass
                                      SELECT ParameterAlt_Key ,
                                             ParameterName ,
                                             'RestructureFacility' Tablename  
                                      FROM DimParameter 
                                       WHERE  DimParameterName = 'RestructureFacility'
                                                AND EffectiveFromTimeKey <= v_TimeKey
                   AND EffectiveToTimeKey >= v_TimeKey ) I   ON I.ParameterName = A.RestructureFacility
                          LEFT JOIN ( SELECT ParameterAlt_Key ,
                                             ParameterName ,
                                             'TypeofRestructuring' Tablename  
                                      FROM DimParameter 
                                       WHERE  DimParameterName = 'TypeofRestructuring'
                                                AND EffectiveFromTimeKey <= v_TimeKey
                                                AND EffectiveToTimeKey >= v_TimeKey ) J   ON J.ParameterName = A.TypeofRestructuring
                          LEFT JOIN ( SELECT ParameterAlt_Key ,
                                             ParameterName ,
                                             'CovidMoratorium' Tablename  
                                      FROM DimParameter 
                                       WHERE  DimParameterName = 'DimYesNoNA'
                                                AND EffectiveFromTimeKey <= v_TimeKey
                                                AND EffectiveToTimeKey >= v_TimeKey ) K   ON K.ParameterName = (CASE 
                                                                                                                     WHEN A.CovidMoratoriamMSME = 'Y' THEN 'Yes'
                                                                                                                     WHEN A.CovidMoratoriamMSME = 'N' THEN 'NO'
                        ELSE 'NA'
                           END)
                          LEFT JOIN ( SELECT ParameterAlt_Key ,
                                             ParameterName ,
                                             'Covid - OTR Category' Tablename  
                                      FROM DimParameter 
                                       WHERE  DimParameterName = 'Covid - OTR Category'
                                                AND EffectiveFromTimeKey <= v_TimeKey
                                                AND EffectiveToTimeKey >= v_TimeKey ) L   ON L.ParameterName = A.CovidOTRCategory
                          LEFT JOIN ( SELECT ParameterAlt_Key ,
                                             ParameterName ,
                                             'BankingRelationship' Tablename  
                                      FROM DimParameter 
                                       WHERE  DimParameterName = 'BankingRelationship'
                                                AND EffectiveFromTimeKey <= v_TimeKey
                                                AND EffectiveToTimeKey >= v_TimeKey ) M   ON M.ParameterName = A.BankingRelationship
                    WHERE  A.UploadID = v_UniqueUploadID
                             AND A.EffectiveToTimeKey >= v_Timekey );
               UPDATE ExcelUploadHistory
                  SET AuthorisationStatus = 'A',
                      ApprovedBy = v_UserLoginID,
                      DateApproved = SYSDATE
                WHERE  EffectiveFromTimeKey <= v_Timekey
                 AND EffectiveToTimeKey >= v_Timekey
                 AND UniqueUploadID = v_UniqueUploadID
                 AND UploadType = 'Restructure Assets Upload';

            END;
            END IF;
            IF ( v_OperationFlag = 17 ) THEN

             ----REJECT
            BEGIN
               UPDATE RestructureAsset_Upload_Mod
                  SET AuthorisationStatus = 'R',
                      ApprovedBy = v_UserLoginID,
                      DateApproved = SYSDATE
                WHERE  UploadId = v_UniqueUploadID
                 AND AuthorisationStatus = 'NP';
               UPDATE RestructureAsset_Upload_Mod
                  SET AuthorisationStatus = 'R',
                      ApprovedBy = v_UserLoginID,
                      DateApproved = SYSDATE
                WHERE  UploadId = v_UniqueUploadID
                 AND AuthorisationStatus = 'NP';
               ----SELECT * FROM IBPCPoolDetail
               UPDATE ExcelUploadHistory
                  SET AuthorisationStatus = 'R',
                      ApprovedBy = v_UserLoginID,
                      DateApproved = SYSDATE
                WHERE  EffectiveFromTimeKey <= v_Timekey
                 AND EffectiveToTimeKey >= v_Timekey
                 AND UniqueUploadID = v_UniqueUploadID
                 AND UploadType = 'Restructure Assets Upload';

            END;
            END IF;
            IF ( v_OperationFlag = 21 ) THEN

             ----REJECT
            BEGIN
               UPDATE RestructureAsset_Upload_Mod
                  SET AuthorisationStatus = 'R',
                      ApprovedBy = v_UserLoginID,
                      DateApproved = SYSDATE
                WHERE  UploadId = v_UniqueUploadID
                 AND AuthorisationStatus IN ( 'NP','1A' )
               ;
               UPDATE RestructureAsset_Upload_Mod
                  SET AuthorisationStatus = 'R',
                      ApprovedBy = v_UserLoginID,
                      DateApproved = SYSDATE
                WHERE  UploadId = v_UniqueUploadID
                 AND AuthorisationStatus IN ( 'NP','1A' )
               ;
               ----SELECT * FROM IBPCPoolDetail
               UPDATE ExcelUploadHistory
                  SET AuthorisationStatus = 'R',
                      ApprovedBy = v_UserLoginID,
                      DateApproved = SYSDATE
                WHERE  EffectiveFromTimeKey <= v_Timekey
                 AND EffectiveToTimeKey >= v_Timekey
                 AND UniqueUploadID = v_UniqueUploadID
                 AND UploadType = 'Restructure Assets Upload';

            END;
            END IF;

         END;
         END IF;
         IF v_OperationFlag IN ( 1,2,3,16,17,18,20,21 )

           AND v_AuthMode = 'Y' THEN
          DECLARE
            v_DateCreated DATE;

         BEGIN
            DBMS_OUTPUT.PUT_LINE('log table');
            v_DateCreated := SYSDATE ;
            --declare @ReferenceID1 varchar(max)
            --set @ReferenceID1 = (case when @OperationFlag in (16,20,21) then @UniqueUploadID else @ExcelUploadId end)
            IF v_OperationFlag IN ( 16,17,18,20,21 )
             THEN

            BEGIN
               DBMS_OUTPUT.PUT_LINE('Authorised');
               utils.var_number :=LogDetailsInsertUpdate_Attendence -- MAINTAIN LOG TABLE
               (v_BranchCode => ' ' ----BranchCode
                ,
                v_MenuID => v_MenuID,
                v_ReferenceID => v_UniqueUploadID -- ReferenceID ,
                ,
                v_CreatedBy => NULL,
                v_ApprovedBy => v_UserLoginID,
                iv_CreatedCheckedDt => v_DateCreated,
                v_Remark => NULL,
                v_ScreenEntityAlt_Key => 16 ---ScreenEntityId -- for FXT060 screen
                ,
                v_Flag => v_OperationFlag,
                v_AuthMode => v_AuthMode) ;

            END;
            ELSE

            BEGIN
               DBMS_OUTPUT.PUT_LINE('UNAuthorised');
               -- Declare
               -- set @CreatedBy  =@UserLoginID
               utils.var_number :=LogDetailsInsertUpdate_Attendence -- MAINTAIN LOG TABLE
               (v_BranchCode => ' ' ----BranchCode
                ,
                v_MenuID => v_MenuID,
                v_ReferenceID => v_ExcelUploadId -- ReferenceID ,
                ,
                v_CreatedBy => v_UserLoginID,
                v_ApprovedBy => NULL,
                iv_CreatedCheckedDt => v_DateCreated,
                v_Remark => NULL,
                v_ScreenEntityAlt_Key => 16 ---ScreenEntityId -- for FXT060 screen
                ,
                v_Flag => v_OperationFlag,
                v_AuthMode => v_AuthMode) ;

            END;
            END IF;

         END;
         END IF;
         --COMMIT TRAN
         ---SET @Result=CASE WHEN  @OperationFlag=1 THEN @UniqueUploadID ELSE 1 END
         v_Result := CASE 
                          WHEN v_OperationFlag = 1
                            AND v_MenuId = 24714 THEN v_ExcelUploadId
         ELSE 1
            END ;
         UPDATE UploadStatus
            SET InsertionOfData = 'Y',
                InsertionCompletedOn = SYSDATE
          WHERE  FileNames = v_filepath;
         ---- IF EXISTS(SELECT 1 FROM IBPCPoolDetail_stg WHERE filEname=@FilePathUpload)
         ----BEGIN
         ----	 DELETE FROM IBPCPoolDetail_stg
         ----	 WHERE filEname=@FilePathUpload
         ----	 PRINT 'ROWS DELETED FROM IBPCPoolDetail_stg'+CAST(@@ROWCOUNT AS VARCHAR(100))
         ----END
         RETURN v_Result;

      END;
   EXCEPTION
      WHEN OTHERS THEN

   BEGIN
      --RETURN @ExcelUploadId
      --ROLLBACK TRAN
      OPEN  v_cursor FOR
         SELECT SQLERRM ,
                utils.error_line 
           FROM DUAL  ;
         DBMS_SQL.RETURN_RESULT(v_cursor);
      v_Result := -1 ;
      UPDATE UploadStatus
         SET InsertionOfData = 'Y',
             InsertionCompletedOn = SYSDATE
       WHERE  FileNames = v_filepath;
      RETURN -1;

   END;END;

EXCEPTION WHEN OTHERS THEN utils.handleerror(SQLCODE,SQLERRM);
END;

/

  GRANT EXECUTE ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "ROLE_LOCAL_RBL_MISDB_PROD_ORACLE";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "PREMOC_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "QPI_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "ALERT_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "DWH_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "MAIN_PRO";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "D2KMNTR_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "CURDAT_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "BS_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "ACL_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "ETL_MAIN_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "DATAUPLOAD_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "ROLE_LOCAL_RBL_MISDB_PROD_ORACLE";
  GRANT DEBUG ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "PREMOC_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "QPI_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "ALERT_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "DWH_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "MAIN_PRO";
  GRANT DEBUG ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "D2KMNTR_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "CURDAT_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "BS_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "ACL_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "ETL_MAIN_RBL_MISDB_PROD";
  GRANT DEBUG ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "DATAUPLOAD_RBL_MISDB_PROD";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "ROLE_ALL_DB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "CC_CDR_RBL_STGDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "RBL_BI_RBL_STGDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "BSG_READ_RBL_STGDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "STD_FIN_RBL_STGDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "RBL_STGDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "ETL_TEMP_RBL_TEMPDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "RBL_TEMPDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "STG_FIN_RBL_STGDB";
  GRANT EXECUTE ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "ADF_CDR_RBL_STGDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "ROLE_ALL_DB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "CC_CDR_RBL_STGDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "RBL_BI_RBL_STGDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "BSG_READ_RBL_STGDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "STD_FIN_RBL_STGDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "RBL_STGDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "ETL_TEMP_RBL_TEMPDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "RBL_TEMPDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "STG_FIN_RBL_STGDB";
  GRANT DEBUG ON "RBL_MISDB_PROD"."RESTRUCTUREASSETS_UPLOADDATAINUP_15122023" TO "ADF_CDR_RBL_STGDB";
