--------------------------------------------------------
--  DDL for Procedure UPDATIONPROVISIONCOMPUTATIONUNSECURED
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" /*=====================================
AUTHER : TRILOKI KHANNA 
CREATE DATE : 27-11-2019
MODIFY DATE : 27-11-2019
DESCRIPTION : Updation Provision Computation UnSecured
EXEC pro.UpdationProvisionComputationUnSecured  @TIMEKEY=25410 
====================================*/
(
  v_TimeKey IN NUMBER
)
AS

BEGIN
    DECLARE V_SQLERRM VARCHAR(150);
   BEGIN

      BEGIN
         UPDATE GTT_ACCOUNTCAL
            SET PROVUNSECURED = 0,
                BANKPROVUNSECURED = 0,
                RBIPROVUNSECURED = 0;
                
         MERGE INTO GTT_ACCOUNTCAL A
         USING (SELECT A.ROWID row_id, (CASE 
         WHEN (NVL(A.NETBALANCE, 0) - (NVL(A.SECUREDAMT, 0) + NVL(A.COVERGOVGUR, 0))) > 0 THEN ((NVL(A.NETBALANCE, 0) - (NVL(A.SECUREDAMT, 0) + NVL(A.COVERGOVGUR, 0))))
         ELSE 0
            END) AS pos_2, (CASE 
         WHEN (NVL(A.NETBALANCE, 0) - (NVL(A.SECUREDAMT, 0) + NVL(A.COVERGOVGUR, 0))) > 0 THEN (((NVL(A.NETBALANCE, 0) - (NVL(A.SECUREDAMT, 0) + NVL(A.COVERGOVGUR, 0)))) * CASE 
                                                                                                                                                                                 WHEN D.PROVISIONNAME = 'Corporate Common' THEN NVL(A.ProvPerUnSecured, 0)
         ELSE NVL(D.PROVISIONUNSECURED, 0) / 100
            END)
         ELSE 0
            END) AS pos_3, (CASE 
         WHEN (NVL(A.NETBALANCE, 0) - (NVL(A.SECUREDAMT, 0) + NVL(A.COVERGOVGUR, 0))) > 0 THEN (((NVL(A.NETBALANCE, 0) - (NVL(A.SECUREDAMT, 0) + NVL(A.COVERGOVGUR, 0)))) * CASE 
                                                                                                                                                                                 WHEN D.PROVISIONNAME = 'Corporate Common' THEN NVL(A.ProvPerUnSecured, 0)
         ELSE NVL(D.PROVISIONUNSECURED, 0) / 100
            END)
         ELSE 0
            END) AS pos_4, (CASE 
         WHEN (NVL(A.NETBALANCE, 0) - (NVL(A.SECUREDAMT, 0) + NVL(A.COVERGOVGUR, 0))) > 0 THEN (((NVL(A.NETBALANCE, 0) - (NVL(A.SECUREDAMT, 0) + NVL(A.COVERGOVGUR, 0)))) * NVL(D.RBIPROVISIONUNSECURED, 0) / 100)
         ELSE 0
            END) AS pos_5
         FROM GTT_ACCOUNTCAL A
              ---INNER JOIN PRO.CUSTOMERCAL B ON A.CUSTOMERENTITYID=B.CUSTOMERENTITYID

                JOIN RBL_MISDB_PROD.DimProvision_Seg D   ON D.EFFECTIVEFROMTIMEKEY <= v_TIMEKEY
                AND D.EFFECTIVETOTIMEKEY >= v_TIMEKEY
                AND NVL(A.PROVISIONALT_KEY, 1) = D.PROVISIONALT_KEY ----ISNULL(B.FLGPROCESSING,'N') ='N'  and

          WHERE FINALASSETCLASSALT_KEY > 1) src
         ON ( A.ROWID = src.row_id )
         WHEN MATCHED THEN UPDATE SET A.UNSECUREDAMT = pos_2,
                                      A.PROVUNSECURED = pos_3,
                                      A.BANKPROVUNSECURED = pos_4,
                                      A.RBIPROVUNSECURED = pos_5;
         MERGE INTO GTT_ACCOUNTCAL A
         USING (SELECT A.ROWID row_id, (CASE 
         WHEN (NVL(A.NETBALANCE, 0) - (NVL(A.SECUREDAMT, 0) + NVL(A.COVERGOVGUR, 0))) > 0 THEN ((NVL(A.NETBALANCE, 0) - (NVL(A.SECUREDAMT, 0) + NVL(A.COVERGOVGUR, 0))))
         ELSE 0
            END) AS pos_2, (CASE 
         WHEN (NVL(A.NETBALANCE, 0) - (NVL(A.SECUREDAMT, 0) + NVL(A.COVERGOVGUR, 0))) > 0 THEN (((NVL(A.NETBALANCE, 0) - (NVL(A.SECUREDAMT, 0) + NVL(A.COVERGOVGUR, 0)))) * CASE 
                                                                                                                                                                                 WHEN D.PROVISIONNAME = 'Corporate Common' THEN NVL(A.ProvPerUnSecured, 0)
         ELSE NVL(D.PROVISIONUNSECURED, 0) / 100
            END)
         ELSE 0
            END) AS pos_3, (CASE 
         WHEN (NVL(A.NETBALANCE, 0) - (NVL(A.SECUREDAMT, 0) + NVL(A.COVERGOVGUR, 0))) > 0 THEN (((NVL(A.NETBALANCE, 0) - (NVL(A.SECUREDAMT, 0) + NVL(A.COVERGOVGUR, 0)))) * CASE 
                                                                                                                                                                                 WHEN D.PROVISIONNAME = 'Corporate Common' THEN NVL(A.ProvPerUnSecured, 0)
         ELSE NVL(D.PROVISIONUNSECURED, 0) / 100
            END)
         ELSE 0
            END) AS pos_4, (CASE 
         WHEN (NVL(A.NETBALANCE, 0) - (NVL(A.SECUREDAMT, 0) + NVL(A.COVERGOVGUR, 0))) > 0 THEN (((NVL(A.NETBALANCE, 0) - (NVL(A.SECUREDAMT, 0) + NVL(A.COVERGOVGUR, 0)))) * NVL(D.RBIPROVISIONUNSECURED, 0) / 100)
         ELSE 0
            END) AS pos_5
         FROM GTT_ACCOUNTCAL A
              ------INNER JOIN PRO.CUSTOMERCAL B ON A.CUSTOMERENTITYID=B.CUSTOMERENTITYID

                JOIN RBL_MISDB_PROD.DimProvision_SegStd D   ON D.EFFECTIVEFROMTIMEKEY <= v_TIMEKEY
                AND D.EFFECTIVETOTIMEKEY >= v_TIMEKEY
                AND NVL(A.PROVISIONALT_KEY, 1) = D.PROVISIONALT_KEY -------ISNULL(B.FLGPROCESSING,'N') ='N' and 

          WHERE FinalAssetClassAlt_Key = 1) src
         ON ( A.ROWID = src.row_id )
         WHEN MATCHED THEN UPDATE SET A.UNSECUREDAMT = pos_2,
                                      A.PROVUNSECURED = pos_3,
                                      A.BANKPROVUNSECURED = pos_4,
                                      A.RBIPROVUNSECURED = pos_5;
         --------update PRO.ACCOUNTCAL set SecuredAmt=NetBalance from PRO.ACCOUNTCAL
         --------where FinalAssetClassAlt_Key=1
         --------and isnull(SecurityValue,0)>0 
         --------and (isnull(SecuredAmt,0)=0)
         --------and SecurityValue>NetBalance
         --------update PRO.ACCOUNTCAL set SecuredAmt=NetBalance from PRO.ACCOUNTCAL
         --------where FinalAssetClassAlt_Key=1
         --------and isnull(NetBalance,0)>0 and isnull(SecurityValue,0)>0 and isnull(SecuredAmt,0)=0
         --------and isnull(SecurityValue,0)>=isnull(NetBalance,0)
         --------update PRO.ACCOUNTCAL set SecuredAmt=SecurityValue from PRO.ACCOUNTCAL
         --------where FinalAssetClassAlt_Key=1
         --------and isnull(NetBalance,0)>0 and isnull(SecurityValue,0)>0 and isnull(SecuredAmt,0)=0
         --------and isnull(SecurityValue,0)<=isnull(NetBalance,0)
         --------update PRO.ACCOUNTCAL set UnSecuredAmt=NetBalance-(SecuredAmt+UnSecuredAmt)
         -------- from PRO.ACCOUNTCAL
         --------where FinalAssetClassAlt_Key=1
         --------and isnull(NetBalance,0)>0 and isnull(NetBalance,0)-(isnull(SecuredAmt,0)+isnull(UnSecuredAmt,0))<>0
         UPDATE GTT_ACCOUNTCAL
            SET UNSECUREDAMT = 0
          WHERE  NVL(UNSECUREDAMT, 0) <= 0;
         UPDATE GTT_ACCOUNTCAL
            SET PROVUNSECURED = 0
          WHERE  NVL(PROVUNSECURED, 0) <= 0;
         UPDATE GTT_ACCOUNTCAL
            SET BANKPROVUNSECURED = 0
          WHERE  NVL(BANKPROVUNSECURED, 0) <= 0;
         UPDATE GTT_ACCOUNTCAL
            SET RBIPROVUNSECURED = 0
          WHERE  NVL(RBIPROVUNSECURED, 0) <= 0;
         -----------------Added for DashBoard 04-03-2021
         --Update BANDAUDITSTATUS set CompletedCount=CompletedCount+1 where BandName='ASSET CLASSIFICATION'
         UPDATE PRO_RBL_MISDB_PROD.AclRunningProcessStatus
            SET COMPLETED = 'Y',
                ERRORDATE = NULL,
                ERRORDESCRIPTION = NULL,
                COUNT = NVL(COUNT, 0) + 1
          WHERE  RUNNINGPROCESSNAME = 'UpdationProvisionComputationUnSecured';

      END;
   EXCEPTION
      WHEN OTHERS THEN

   BEGIN
   V_SQLERRM:=SQLERRM;
      UPDATE PRO_RBL_MISDB_PROD.AclRunningProcessStatus
         SET COMPLETED = 'N',
             ERRORDATE = SYSDATE,
             ERRORDESCRIPTION = V_SQLERRM,
             COUNT = NVL(COUNT, 0) + 1
       WHERE  RUNNINGPROCESSNAME = 'UpdationProvisionComputationUnSecured';

   END;END;

EXCEPTION WHEN NO_DATA_FOUND THEN DBMS_OUTPUT.PUT_LINE('NO DATA FOUND');
            WHEN OTHERS THEN utils.handleerror(SQLCODE,SQLERRM);
END;

/

  GRANT EXECUTE ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "ROLE_LOCAL_RBL_MISDB_PROD_ORACLE";
  GRANT EXECUTE ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "PREMOC_RBL_MISDB_PROD";
  GRANT EXECUTE ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "QPI_RBL_MISDB_PROD";
  GRANT EXECUTE ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "ALERT_RBL_MISDB_PROD";
  GRANT EXECUTE ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "DWH_RBL_MISDB_PROD";
  GRANT EXECUTE ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "D2KMNTR_RBL_MISDB_PROD";
  GRANT EXECUTE ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "CURDAT_RBL_MISDB_PROD";
  GRANT EXECUTE ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "BS_RBL_MISDB_PROD";
  GRANT EXECUTE ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "ACL_RBL_MISDB_PROD";
  GRANT EXECUTE ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "ETL_MAIN_RBL_MISDB_PROD";
  GRANT EXECUTE ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "RBL_MISDB_PROD";
  GRANT EXECUTE ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "DATAUPLOAD_RBL_MISDB_PROD";
  GRANT DEBUG ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "ROLE_LOCAL_RBL_MISDB_PROD_ORACLE";
  GRANT DEBUG ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "PREMOC_RBL_MISDB_PROD";
  GRANT DEBUG ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "QPI_RBL_MISDB_PROD";
  GRANT DEBUG ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "ALERT_RBL_MISDB_PROD";
  GRANT DEBUG ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "DWH_RBL_MISDB_PROD";
  GRANT DEBUG ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "D2KMNTR_RBL_MISDB_PROD";
  GRANT DEBUG ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "CURDAT_RBL_MISDB_PROD";
  GRANT DEBUG ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "BS_RBL_MISDB_PROD";
  GRANT DEBUG ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "ACL_RBL_MISDB_PROD";
  GRANT DEBUG ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "ETL_MAIN_RBL_MISDB_PROD";
  GRANT DEBUG ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "RBL_MISDB_PROD";
  GRANT DEBUG ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "DATAUPLOAD_RBL_MISDB_PROD";
  GRANT EXECUTE ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "ROLE_ALL_DB";
  GRANT EXECUTE ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "CC_CDR_RBL_STGDB";
  GRANT EXECUTE ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "RBL_BI_RBL_STGDB";
  GRANT EXECUTE ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "BSG_READ_RBL_STGDB";
  GRANT EXECUTE ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "STD_FIN_RBL_STGDB";
  GRANT EXECUTE ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "RBL_STGDB";
  GRANT EXECUTE ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "ETL_TEMP_RBL_TEMPDB";
  GRANT EXECUTE ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "RBL_TEMPDB";
  GRANT EXECUTE ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "STG_FIN_RBL_STGDB";
  GRANT EXECUTE ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "ADF_CDR_RBL_STGDB";
  GRANT DEBUG ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "ROLE_ALL_DB";
  GRANT DEBUG ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "CC_CDR_RBL_STGDB";
  GRANT DEBUG ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "RBL_BI_RBL_STGDB";
  GRANT DEBUG ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "BSG_READ_RBL_STGDB";
  GRANT DEBUG ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "STD_FIN_RBL_STGDB";
  GRANT DEBUG ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "RBL_STGDB";
  GRANT DEBUG ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "ETL_TEMP_RBL_TEMPDB";
  GRANT DEBUG ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "RBL_TEMPDB";
  GRANT DEBUG ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "STG_FIN_RBL_STGDB";
  GRANT DEBUG ON "MAIN_PRO"."UPDATIONPROVISIONCOMPUTATIONUNSECURED" TO "ADF_CDR_RBL_STGDB";
